kfe_motion.tmc
==================

Records
-------
```
 "IM1K0:XTES:CAM:CIL:PWR" (bo)
 "IM1K0:XTES:CAM:CIL:PWR_RBV" (bi)
 "IM1K0:XTES:CAM:PWR" (bo)
 "IM1K0:XTES:CAM:PWR_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bAllBackwardEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bAllEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bAllForwardEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bBrakeRelease_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bBusy_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bDone_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bEnable" (bo)
 "IM1K0:XTES:CLF:PLC:bEnableDone_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bError_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bExecute" (bo)
 "IM1K0:XTES:CLF:PLC:bExecute_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bGantryAxis_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bGantryForwardEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bHardwareEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bHome_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bLimitForwardEnable_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bPowerSelf_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:bReset" (bo)
 "IM1K0:XTES:CLF:PLC:bReset_RBV" (bi)
 "IM1K0:XTES:CLF:PLC:fAcceleration" (ao)
 "IM1K0:XTES:CLF:PLC:fAcceleration_RBV" (ai)
 "IM1K0:XTES:CLF:PLC:fDeceleration" (ao)
 "IM1K0:XTES:CLF:PLC:fDeceleration_RBV" (ai)
 "IM1K0:XTES:CLF:PLC:fHomePosition" (ao)
 "IM1K0:XTES:CLF:PLC:fHomePosition_RBV" (ai)
 "IM1K0:XTES:CLF:PLC:fPosition" (ao)
 "IM1K0:XTES:CLF:PLC:fPosition_RBV" (ai)
 "IM1K0:XTES:CLF:PLC:fVelocity" (ao)
 "IM1K0:XTES:CLF:PLC:fVelocity_RBV" (ai)
 "IM1K0:XTES:CLF:PLC:nBrakeMode_RBV" (mbbi)
 "IM1K0:XTES:CLF:PLC:nCmdData" (longout)
 "IM1K0:XTES:CLF:PLC:nCmdData_RBV" (longin)
 "IM1K0:XTES:CLF:PLC:nCommand" (longout)
 "IM1K0:XTES:CLF:PLC:nCommand_RBV" (longin)
 "IM1K0:XTES:CLF:PLC:nEnableMode_RBV" (mbbi)
 "IM1K0:XTES:CLF:PLC:nErrorId_RBV" (longin)
 "IM1K0:XTES:CLF:PLC:nHomingMode_RBV" (mbbi)
 "IM1K0:XTES:CLF:PLC:nMotionAxisID_RBV" (longin)
 "IM1K0:XTES:CLF:PLC:sErrorMessage_RBV" (waveform)
 "IM1K0:XTES:CLZ:PLC:bAllBackwardEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bAllEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bAllForwardEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bBrakeRelease_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bBusy_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bDone_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bEnable" (bo)
 "IM1K0:XTES:CLZ:PLC:bEnableDone_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bError_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bExecute" (bo)
 "IM1K0:XTES:CLZ:PLC:bExecute_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bGantryAxis_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bGantryForwardEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bHardwareEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bHome_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bLimitForwardEnable_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bPowerSelf_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:bReset" (bo)
 "IM1K0:XTES:CLZ:PLC:bReset_RBV" (bi)
 "IM1K0:XTES:CLZ:PLC:fAcceleration" (ao)
 "IM1K0:XTES:CLZ:PLC:fAcceleration_RBV" (ai)
 "IM1K0:XTES:CLZ:PLC:fDeceleration" (ao)
 "IM1K0:XTES:CLZ:PLC:fDeceleration_RBV" (ai)
 "IM1K0:XTES:CLZ:PLC:fHomePosition" (ao)
 "IM1K0:XTES:CLZ:PLC:fHomePosition_RBV" (ai)
 "IM1K0:XTES:CLZ:PLC:fPosition" (ao)
 "IM1K0:XTES:CLZ:PLC:fPosition_RBV" (ai)
 "IM1K0:XTES:CLZ:PLC:fVelocity" (ao)
 "IM1K0:XTES:CLZ:PLC:fVelocity_RBV" (ai)
 "IM1K0:XTES:CLZ:PLC:nBrakeMode_RBV" (mbbi)
 "IM1K0:XTES:CLZ:PLC:nCmdData" (longout)
 "IM1K0:XTES:CLZ:PLC:nCmdData_RBV" (longin)
 "IM1K0:XTES:CLZ:PLC:nCommand" (longout)
 "IM1K0:XTES:CLZ:PLC:nCommand_RBV" (longin)
 "IM1K0:XTES:CLZ:PLC:nEnableMode_RBV" (mbbi)
 "IM1K0:XTES:CLZ:PLC:nErrorId_RBV" (longin)
 "IM1K0:XTES:CLZ:PLC:nHomingMode_RBV" (mbbi)
 "IM1K0:XTES:CLZ:PLC:nMotionAxisID_RBV" (longin)
 "IM1K0:XTES:CLZ:PLC:sErrorMessage_RBV" (waveform)
 "IM1K0:XTES:MFW:ERR:MSG_RBV" (waveform)
 "IM1K0:XTES:MFW:ERR:RESET" (bo)
 "IM1K0:XTES:MFW:ERR:RESET_RBV" (bi)
 "IM1K0:XTES:MFW:GET_RBV" (mbbi)
 "IM1K0:XTES:MFW:RAW:CMD_RBV" (waveform)
 "IM1K0:XTES:MFW:RAW:CMD" (waveform)
 "IM1K0:XTES:MFW:RAW:DONE_RBV" (bi)
 "IM1K0:XTES:MFW:RAW:ERR:RECV_RBV" (mbbi)
 "IM1K0:XTES:MFW:RAW:ERR:SEND_RBV" (mbbi)
 "IM1K0:XTES:MFW:RAW:ERR:SER_RBV" (mbbi)
 "IM1K0:XTES:MFW:RAW:RESP_RBV" (waveform)
 "IM1K0:XTES:MFW:RAW:SEND" (bo)
 "IM1K0:XTES:MFW:RAW:SEND_RBV" (bi)
 "IM1K0:XTES:MFW:SET" (mbbo)
 "IM1K0:XTES:MFW:SET_RBV" (mbbi)
 "IM1K0:XTES:MMS:PLC:bAllBackwardEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bAllEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bAllForwardEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bBrakeRelease_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bBusy_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bDone_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bEnable" (bo)
 "IM1K0:XTES:MMS:PLC:bEnableDone_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bError_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bExecute" (bo)
 "IM1K0:XTES:MMS:PLC:bExecute_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bGantryAxis_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bGantryForwardEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bHardwareEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bHome_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bLimitForwardEnable_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bPowerSelf_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:bReset" (bo)
 "IM1K0:XTES:MMS:PLC:bReset_RBV" (bi)
 "IM1K0:XTES:MMS:PLC:fAcceleration" (ao)
 "IM1K0:XTES:MMS:PLC:fAcceleration_RBV" (ai)
 "IM1K0:XTES:MMS:PLC:fDeceleration" (ao)
 "IM1K0:XTES:MMS:PLC:fDeceleration_RBV" (ai)
 "IM1K0:XTES:MMS:PLC:fHomePosition" (ao)
 "IM1K0:XTES:MMS:PLC:fHomePosition_RBV" (ai)
 "IM1K0:XTES:MMS:PLC:fPosition" (ao)
 "IM1K0:XTES:MMS:PLC:fPosition_RBV" (ai)
 "IM1K0:XTES:MMS:PLC:fVelocity" (ao)
 "IM1K0:XTES:MMS:PLC:fVelocity_RBV" (ai)
 "IM1K0:XTES:MMS:PLC:nBrakeMode_RBV" (mbbi)
 "IM1K0:XTES:MMS:PLC:nCmdData" (longout)
 "IM1K0:XTES:MMS:PLC:nCmdData_RBV" (longin)
 "IM1K0:XTES:MMS:PLC:nCommand" (longout)
 "IM1K0:XTES:MMS:PLC:nCommand_RBV" (longin)
 "IM1K0:XTES:MMS:PLC:nEnableMode_RBV" (mbbi)
 "IM1K0:XTES:MMS:PLC:nErrorId_RBV" (longin)
 "IM1K0:XTES:MMS:PLC:nHomingMode_RBV" (mbbi)
 "IM1K0:XTES:MMS:PLC:nMotionAxisID_RBV" (longin)
 "IM1K0:XTES:MMS:PLC:sErrorMessage_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:01:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:01:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:01:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:01:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:01:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:01:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:01:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:01:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:01:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:01:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:01:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:01:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:01:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:01:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:02:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:02:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:02:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:02:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:02:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:02:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:02:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:02:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:02:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:02:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:02:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:02:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:02:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:02:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:03:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:03:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:03:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:03:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:03:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:03:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:03:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:03:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:03:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:03:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:03:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:03:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:03:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:03:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:04:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:04:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:04:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:04:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:04:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:04:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:04:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:04:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:04:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:04:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:04:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:04:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:04:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:04:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:05:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:05:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:05:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:05:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:05:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:05:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:05:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:05:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:05:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:05:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:05:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:05:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:05:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:05:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:06:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:06:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:06:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:06:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:06:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:06:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:06:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:06:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:06:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:06:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:06:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:06:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:06:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:06:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:07:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:07:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:07:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:07:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:07:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:07:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:07:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:07:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:07:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:07:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:07:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:07:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:07:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:07:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:08:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:08:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:08:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:08:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:08:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:08:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:08:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:08:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:08:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:08:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:08:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:08:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:08:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:08:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:09:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:09:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:09:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:09:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:09:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:09:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:09:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:09:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:09:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:09:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:09:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:09:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:09:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:09:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:10:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:10:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:10:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:10:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:10:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:10:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:10:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:10:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:10:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:10:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:10:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:10:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:10:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:10:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:11:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:11:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:11:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:11:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:11:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:11:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:11:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:11:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:11:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:11:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:11:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:11:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:11:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:11:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:12:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:12:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:12:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:12:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:12:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:12:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:12:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:12:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:12:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:12:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:12:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:12:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:12:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:12:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:13:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:13:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:13:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:13:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:13:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:13:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:13:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:13:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:13:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:13:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:13:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:13:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:13:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:13:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:14:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:14:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:14:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:14:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:14:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:14:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:14:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:14:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:14:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:14:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:14:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:14:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:14:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:14:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:15:ACCL" (ao)
 "IM1K0:XTES:MMS:STATE:15:ACCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:15:DCCL" (ao)
 "IM1K0:XTES:MMS:STATE:15:DCCL_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:15:DELTA" (ao)
 "IM1K0:XTES:MMS:STATE:15:DELTA_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:15:LOCKED_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:15:MOVE_OK_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:15:NAME_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:15:SETPOINT" (ao)
 "IM1K0:XTES:MMS:STATE:15:SETPOINT_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:15:VALID_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:15:VELO" (ao)
 "IM1K0:XTES:MMS:STATE:15:VELO_RBV" (ai)
 "IM1K0:XTES:MMS:STATE:BUSY_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:DONE_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:ERRID_RBV" (longin)
 "IM1K0:XTES:MMS:STATE:ERRMSG_RBV" (waveform)
 "IM1K0:XTES:MMS:STATE:ERR_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:GET_RBV" (mbbi)
 "IM1K0:XTES:MMS:STATE:RESET" (bo)
 "IM1K0:XTES:MMS:STATE:RESET_RBV" (bi)
 "IM1K0:XTES:MMS:STATE:SET" (mbbo)
 "IM1K0:XTES:MMS:STATE:SET_RBV" (mbbi)
 "IM1K0:XTES:SFW:FLOW" (bo)
 "IM1K0:XTES:SFW:FLOW_RBV" (bi)
 "IM1K3:PPM:CAM:CIL:PCT" (ao)
 "IM1K3:PPM:CAM:CIL:PCT_RBV" (ai)
 "IM1K3:PPM:CAM:PWR" (bo)
 "IM1K3:PPM:CAM:PWR_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bAllBackwardEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bAllEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bAllForwardEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bBrakeRelease_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bBusy_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bDone_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bEnable" (bo)
 "IM1K3:PPM:MMS:PLC:bEnableDone_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bError_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bExecute" (bo)
 "IM1K3:PPM:MMS:PLC:bExecute_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bGantryAxis_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bGantryForwardEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bHardwareEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bHome_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bLimitForwardEnable_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bPowerSelf_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:bReset" (bo)
 "IM1K3:PPM:MMS:PLC:bReset_RBV" (bi)
 "IM1K3:PPM:MMS:PLC:fAcceleration" (ao)
 "IM1K3:PPM:MMS:PLC:fAcceleration_RBV" (ai)
 "IM1K3:PPM:MMS:PLC:fDeceleration" (ao)
 "IM1K3:PPM:MMS:PLC:fDeceleration_RBV" (ai)
 "IM1K3:PPM:MMS:PLC:fHomePosition" (ao)
 "IM1K3:PPM:MMS:PLC:fHomePosition_RBV" (ai)
 "IM1K3:PPM:MMS:PLC:fPosition" (ao)
 "IM1K3:PPM:MMS:PLC:fPosition_RBV" (ai)
 "IM1K3:PPM:MMS:PLC:fVelocity" (ao)
 "IM1K3:PPM:MMS:PLC:fVelocity_RBV" (ai)
 "IM1K3:PPM:MMS:PLC:nBrakeMode_RBV" (mbbi)
 "IM1K3:PPM:MMS:PLC:nCmdData" (longout)
 "IM1K3:PPM:MMS:PLC:nCmdData_RBV" (longin)
 "IM1K3:PPM:MMS:PLC:nCommand" (longout)
 "IM1K3:PPM:MMS:PLC:nCommand_RBV" (longin)
 "IM1K3:PPM:MMS:PLC:nEnableMode_RBV" (mbbi)
 "IM1K3:PPM:MMS:PLC:nErrorId_RBV" (longin)
 "IM1K3:PPM:MMS:PLC:nHomingMode_RBV" (mbbi)
 "IM1K3:PPM:MMS:PLC:nMotionAxisID_RBV" (longin)
 "IM1K3:PPM:MMS:PLC:sErrorMessage_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:01:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:01:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:01:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:01:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:01:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:01:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:01:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:01:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:01:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:01:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:01:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:01:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:01:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:01:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:02:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:02:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:02:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:02:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:02:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:02:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:02:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:02:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:02:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:02:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:02:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:02:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:02:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:02:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:03:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:03:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:03:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:03:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:03:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:03:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:03:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:03:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:03:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:03:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:03:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:03:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:03:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:03:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:04:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:04:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:04:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:04:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:04:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:04:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:04:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:04:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:04:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:04:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:04:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:04:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:04:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:04:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:05:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:05:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:05:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:05:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:05:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:05:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:05:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:05:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:05:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:05:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:05:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:05:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:05:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:05:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:06:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:06:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:06:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:06:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:06:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:06:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:06:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:06:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:06:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:06:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:06:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:06:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:06:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:06:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:07:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:07:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:07:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:07:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:07:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:07:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:07:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:07:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:07:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:07:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:07:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:07:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:07:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:07:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:08:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:08:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:08:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:08:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:08:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:08:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:08:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:08:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:08:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:08:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:08:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:08:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:08:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:08:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:09:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:09:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:09:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:09:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:09:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:09:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:09:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:09:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:09:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:09:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:09:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:09:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:09:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:09:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:10:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:10:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:10:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:10:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:10:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:10:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:10:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:10:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:10:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:10:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:10:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:10:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:10:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:10:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:11:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:11:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:11:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:11:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:11:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:11:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:11:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:11:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:11:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:11:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:11:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:11:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:11:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:11:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:12:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:12:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:12:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:12:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:12:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:12:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:12:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:12:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:12:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:12:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:12:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:12:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:12:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:12:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:13:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:13:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:13:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:13:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:13:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:13:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:13:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:13:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:13:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:13:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:13:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:13:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:13:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:13:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:14:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:14:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:14:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:14:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:14:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:14:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:14:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:14:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:14:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:14:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:14:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:14:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:14:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:14:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:15:ACCL" (ao)
 "IM1K3:PPM:MMS:STATE:15:ACCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:15:DCCL" (ao)
 "IM1K3:PPM:MMS:STATE:15:DCCL_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:15:DELTA" (ao)
 "IM1K3:PPM:MMS:STATE:15:DELTA_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:15:LOCKED_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:15:MOVE_OK_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:15:NAME_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:15:SETPOINT" (ao)
 "IM1K3:PPM:MMS:STATE:15:SETPOINT_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:15:VALID_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:15:VELO" (ao)
 "IM1K3:PPM:MMS:STATE:15:VELO_RBV" (ai)
 "IM1K3:PPM:MMS:STATE:BUSY_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:DONE_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:ERRID_RBV" (longin)
 "IM1K3:PPM:MMS:STATE:ERRMSG_RBV" (waveform)
 "IM1K3:PPM:MMS:STATE:ERR_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:GET_RBV" (mbbi)
 "IM1K3:PPM:MMS:STATE:RESET" (bo)
 "IM1K3:PPM:MMS:STATE:RESET_RBV" (bi)
 "IM1K3:PPM:MMS:STATE:SET" (mbbo)
 "IM1K3:PPM:MMS:STATE:SET_RBV" (mbbi)
 "IM1K3:PPM:SFM:FLOW_RBV" (ai)
 "IM1K3:PPM:SFM:MA_RBV" (longin)
 "IM1K3:PPM:SPM:CALIB_BUFFER_RBV" (waveform)
 "IM1K3:PPM:SPM:CALIB:MJ_RATIO" (ao)
 "IM1K3:PPM:SPM:CALIB:MJ_RATIO_RBV" (ai)
 "IM1K3:PPM:SPM:CALIB:OFFSET" (ao)
 "IM1K3:PPM:SPM:CALIB:OFFSET_RBV" (ai)
 "IM1K3:PPM:SPM:CALIB:RATIO" (ao)
 "IM1K3:PPM:SPM:CALIB:RATIO_RBV" (ai)
 "IM1K3:PPM:SPM:CALIB_RBV" (ai)
 "IM1K3:PPM:SPM:MJ_BUFFER_RBV" (waveform)
 "IM1K3:PPM:SPM:MJ_RBV" (ai)
 "IM1K3:PPM:SPM:STC:CONN_RBV" (bi)
 "IM1K3:PPM:SPM:STC:ERR_RBV" (bi)
 "IM1K3:PPM:SPM:STC:TEMP_RBV" (ai)
 "IM1K3:PPM:SPM:VOLT_BUFFER_RBV" (waveform)
 "IM1K3:PPM:SPM:VOLT_RBV" (ai)
 "IM1K3:PPM:YAG:STC:CONN_RBV" (bi)
 "IM1K3:PPM:YAG:STC:ERR_RBV" (bi)
 "IM1K3:PPM:YAG:STC:TEMP_RBV" (ai)
 "IM2K0:XTES:CAM:CIL:PWR" (bo)
 "IM2K0:XTES:CAM:CIL:PWR_RBV" (bi)
 "IM2K0:XTES:CAM:PWR" (bo)
 "IM2K0:XTES:CAM:PWR_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bAllBackwardEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bAllEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bAllForwardEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bBrakeRelease_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bBusy_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bDone_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bEnable" (bo)
 "IM2K0:XTES:CLF:PLC:bEnableDone_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bError_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bExecute" (bo)
 "IM2K0:XTES:CLF:PLC:bExecute_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bGantryAxis_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bGantryForwardEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bHardwareEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bHome_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bLimitForwardEnable_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bPowerSelf_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:bReset" (bo)
 "IM2K0:XTES:CLF:PLC:bReset_RBV" (bi)
 "IM2K0:XTES:CLF:PLC:fAcceleration" (ao)
 "IM2K0:XTES:CLF:PLC:fAcceleration_RBV" (ai)
 "IM2K0:XTES:CLF:PLC:fDeceleration" (ao)
 "IM2K0:XTES:CLF:PLC:fDeceleration_RBV" (ai)
 "IM2K0:XTES:CLF:PLC:fHomePosition" (ao)
 "IM2K0:XTES:CLF:PLC:fHomePosition_RBV" (ai)
 "IM2K0:XTES:CLF:PLC:fPosition" (ao)
 "IM2K0:XTES:CLF:PLC:fPosition_RBV" (ai)
 "IM2K0:XTES:CLF:PLC:fVelocity" (ao)
 "IM2K0:XTES:CLF:PLC:fVelocity_RBV" (ai)
 "IM2K0:XTES:CLF:PLC:nBrakeMode_RBV" (mbbi)
 "IM2K0:XTES:CLF:PLC:nCmdData" (longout)
 "IM2K0:XTES:CLF:PLC:nCmdData_RBV" (longin)
 "IM2K0:XTES:CLF:PLC:nCommand" (longout)
 "IM2K0:XTES:CLF:PLC:nCommand_RBV" (longin)
 "IM2K0:XTES:CLF:PLC:nEnableMode_RBV" (mbbi)
 "IM2K0:XTES:CLF:PLC:nErrorId_RBV" (longin)
 "IM2K0:XTES:CLF:PLC:nHomingMode_RBV" (mbbi)
 "IM2K0:XTES:CLF:PLC:nMotionAxisID_RBV" (longin)
 "IM2K0:XTES:CLF:PLC:sErrorMessage_RBV" (waveform)
 "IM2K0:XTES:CLZ:PLC:bAllBackwardEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bAllEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bAllForwardEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bBrakeRelease_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bBusy_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bDone_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bEnable" (bo)
 "IM2K0:XTES:CLZ:PLC:bEnableDone_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bError_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bExecute" (bo)
 "IM2K0:XTES:CLZ:PLC:bExecute_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bGantryAxis_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bGantryForwardEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bHardwareEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bHome_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bLimitForwardEnable_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bPowerSelf_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:bReset" (bo)
 "IM2K0:XTES:CLZ:PLC:bReset_RBV" (bi)
 "IM2K0:XTES:CLZ:PLC:fAcceleration" (ao)
 "IM2K0:XTES:CLZ:PLC:fAcceleration_RBV" (ai)
 "IM2K0:XTES:CLZ:PLC:fDeceleration" (ao)
 "IM2K0:XTES:CLZ:PLC:fDeceleration_RBV" (ai)
 "IM2K0:XTES:CLZ:PLC:fHomePosition" (ao)
 "IM2K0:XTES:CLZ:PLC:fHomePosition_RBV" (ai)
 "IM2K0:XTES:CLZ:PLC:fPosition" (ao)
 "IM2K0:XTES:CLZ:PLC:fPosition_RBV" (ai)
 "IM2K0:XTES:CLZ:PLC:fVelocity" (ao)
 "IM2K0:XTES:CLZ:PLC:fVelocity_RBV" (ai)
 "IM2K0:XTES:CLZ:PLC:nBrakeMode_RBV" (mbbi)
 "IM2K0:XTES:CLZ:PLC:nCmdData" (longout)
 "IM2K0:XTES:CLZ:PLC:nCmdData_RBV" (longin)
 "IM2K0:XTES:CLZ:PLC:nCommand" (longout)
 "IM2K0:XTES:CLZ:PLC:nCommand_RBV" (longin)
 "IM2K0:XTES:CLZ:PLC:nEnableMode_RBV" (mbbi)
 "IM2K0:XTES:CLZ:PLC:nErrorId_RBV" (longin)
 "IM2K0:XTES:CLZ:PLC:nHomingMode_RBV" (mbbi)
 "IM2K0:XTES:CLZ:PLC:nMotionAxisID_RBV" (longin)
 "IM2K0:XTES:CLZ:PLC:sErrorMessage_RBV" (waveform)
 "IM2K0:XTES:MFW:ERR:MSG_RBV" (waveform)
 "IM2K0:XTES:MFW:ERR:RESET" (bo)
 "IM2K0:XTES:MFW:ERR:RESET_RBV" (bi)
 "IM2K0:XTES:MFW:GET_RBV" (mbbi)
 "IM2K0:XTES:MFW:RAW:CMD_RBV" (waveform)
 "IM2K0:XTES:MFW:RAW:CMD" (waveform)
 "IM2K0:XTES:MFW:RAW:DONE_RBV" (bi)
 "IM2K0:XTES:MFW:RAW:ERR:RECV_RBV" (mbbi)
 "IM2K0:XTES:MFW:RAW:ERR:SEND_RBV" (mbbi)
 "IM2K0:XTES:MFW:RAW:ERR:SER_RBV" (mbbi)
 "IM2K0:XTES:MFW:RAW:RESP_RBV" (waveform)
 "IM2K0:XTES:MFW:RAW:SEND" (bo)
 "IM2K0:XTES:MFW:RAW:SEND_RBV" (bi)
 "IM2K0:XTES:MFW:SET" (mbbo)
 "IM2K0:XTES:MFW:SET_RBV" (mbbi)
 "IM2K0:XTES:MMS:PLC:bAllBackwardEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bAllEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bAllForwardEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bBrakeRelease_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bBusy_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bDone_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bEnable" (bo)
 "IM2K0:XTES:MMS:PLC:bEnableDone_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bError_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bExecute" (bo)
 "IM2K0:XTES:MMS:PLC:bExecute_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bGantryAxis_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bGantryBackwardEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bGantryForwardEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bHardwareEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bHome_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bLimitBackwardEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bLimitForwardEnable_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bPowerSelf_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:bReset" (bo)
 "IM2K0:XTES:MMS:PLC:bReset_RBV" (bi)
 "IM2K0:XTES:MMS:PLC:fAcceleration" (ao)
 "IM2K0:XTES:MMS:PLC:fAcceleration_RBV" (ai)
 "IM2K0:XTES:MMS:PLC:fDeceleration" (ao)
 "IM2K0:XTES:MMS:PLC:fDeceleration_RBV" (ai)
 "IM2K0:XTES:MMS:PLC:fHomePosition" (ao)
 "IM2K0:XTES:MMS:PLC:fHomePosition_RBV" (ai)
 "IM2K0:XTES:MMS:PLC:fPosition" (ao)
 "IM2K0:XTES:MMS:PLC:fPosition_RBV" (ai)
 "IM2K0:XTES:MMS:PLC:fVelocity" (ao)
 "IM2K0:XTES:MMS:PLC:fVelocity_RBV" (ai)
 "IM2K0:XTES:MMS:PLC:nBrakeMode_RBV" (mbbi)
 "IM2K0:XTES:MMS:PLC:nCmdData" (longout)
 "IM2K0:XTES:MMS:PLC:nCmdData_RBV" (longin)
 "IM2K0:XTES:MMS:PLC:nCommand" (longout)
 "IM2K0:XTES:MMS:PLC:nCommand_RBV" (longin)
 "IM2K0:XTES:MMS:PLC:nEnableMode_RBV" (mbbi)
 "IM2K0:XTES:MMS:PLC:nErrorId_RBV" (longin)
 "IM2K0:XTES:MMS:PLC:nHomingMode_RBV" (mbbi)
 "IM2K0:XTES:MMS:PLC:nMotionAxisID_RBV" (longin)
 "IM2K0:XTES:MMS:PLC:sErrorMessage_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:01:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:01:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:01:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:01:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:01:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:01:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:01:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:01:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:01:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:01:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:01:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:01:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:01:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:01:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:02:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:02:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:02:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:02:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:02:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:02:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:02:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:02:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:02:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:02:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:02:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:02:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:02:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:02:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:03:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:03:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:03:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:03:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:03:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:03:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:03:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:03:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:03:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:03:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:03:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:03:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:03:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:03:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:04:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:04:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:04:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:04:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:04:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:04:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:04:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:04:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:04:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:04:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:04:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:04:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:04:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:04:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:05:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:05:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:05:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:05:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:05:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:05:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:05:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:05:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:05:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:05:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:05:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:05:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:05:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:05:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:06:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:06:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:06:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:06:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:06:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:06:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:06:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:06:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:06:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:06:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:06:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:06:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:06:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:06:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:07:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:07:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:07:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:07:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:07:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:07:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:07:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:07:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:07:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:07:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:07:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:07:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:07:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:07:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:08:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:08:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:08:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:08:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:08:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:08:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:08:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:08:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:08:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:08:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:08:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:08:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:08:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:08:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:09:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:09:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:09:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:09:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:09:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:09:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:09:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:09:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:09:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:09:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:09:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:09:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:09:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:09:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:10:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:10:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:10:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:10:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:10:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:10:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:10:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:10:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:10:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:10:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:10:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:10:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:10:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:10:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:11:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:11:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:11:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:11:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:11:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:11:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:11:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:11:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:11:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:11:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:11:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:11:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:11:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:11:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:12:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:12:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:12:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:12:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:12:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:12:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:12:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:12:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:12:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:12:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:12:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:12:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:12:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:12:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:13:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:13:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:13:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:13:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:13:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:13:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:13:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:13:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:13:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:13:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:13:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:13:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:13:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:13:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:14:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:14:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:14:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:14:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:14:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:14:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:14:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:14:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:14:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:14:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:14:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:14:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:14:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:14:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:15:ACCL" (ao)
 "IM2K0:XTES:MMS:STATE:15:ACCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:15:DCCL" (ao)
 "IM2K0:XTES:MMS:STATE:15:DCCL_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:15:DELTA" (ao)
 "IM2K0:XTES:MMS:STATE:15:DELTA_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:15:LOCKED_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:15:MOVE_OK_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:15:NAME_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:15:SETPOINT" (ao)
 "IM2K0:XTES:MMS:STATE:15:SETPOINT_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:15:VALID_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:15:VELO" (ao)
 "IM2K0:XTES:MMS:STATE:15:VELO_RBV" (ai)
 "IM2K0:XTES:MMS:STATE:BUSY_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:DONE_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:ERRID_RBV" (longin)
 "IM2K0:XTES:MMS:STATE:ERRMSG_RBV" (waveform)
 "IM2K0:XTES:MMS:STATE:ERR_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:GET_RBV" (mbbi)
 "IM2K0:XTES:MMS:STATE:RESET" (bo)
 "IM2K0:XTES:MMS:STATE:RESET_RBV" (bi)
 "IM2K0:XTES:MMS:STATE:SET" (mbbo)
 "IM2K0:XTES:MMS:STATE:SET_RBV" (mbbi)
 "IM2K0:XTES:SFW:FLOW" (bo)
 "IM2K0:XTES:SFW:FLOW_RBV" (bi)
 "PLC:KFE:MOTION:PLACEHOLDER" (longout)
 "PLC:KFE:MOTION:PLACEHOLDER_RBV" (longin)
 "$(PREFIX)LCLSGeneral:LogHost_RBV" (waveform)
 "$(PREFIX)LCLSGeneral:LogHost" (waveform)
 "$(PREFIX)LCLSGeneral:LogPort" (longout)
 "$(PREFIX)LCLSGeneral:LogPort_RBV" (longin)
 "SL1K0:POWER:ACTUAL_XCENTER" (ao)
 "SL1K0:POWER:ACTUAL_XCENTER_RBV" (ai)
 "SL1K0:POWER:ACTUAL_XWIDTH" (ao)
 "SL1K0:POWER:ACTUAL_XWIDTH_RBV" (ai)
 "SL1K0:POWER:ACTUAL_YCENTER" (ao)
 "SL1K0:POWER:ACTUAL_YCENTER_RBV" (ai)
 "SL1K0:POWER:ACTUAL_YWIDTH" (ao)
 "SL1K0:POWER:ACTUAL_YWIDTH_RBV" (ai)
 "SL1K0:POWER:BLOCK" (bo)
 "SL1K0:POWER:BLOCK_RBV" (bi)
 "SL1K0:POWER:BOTTOM:ACCL" (ao)
 "SL1K0:POWER:BOTTOM:ACCL_RBV" (ai)
 "SL1K0:POWER:BOTTOM:AT_STATE_RBV" (bi)
 "SL1K0:POWER:BOTTOM:BUSY_RBV" (bi)
 "SL1K0:POWER:BOTTOM:DCCL" (ao)
 "SL1K0:POWER:BOTTOM:DCCL_RBV" (ai)
 "SL1K0:POWER:BOTTOM:DELTA" (ao)
 "SL1K0:POWER:BOTTOM:DELTA_RBV" (ai)
 "SL1K0:POWER:BOTTOM:DMOV_RBV" (bi)
 "SL1K0:POWER:BOTTOM:ERRMSG_RBV" (waveform)
 "SL1K0:POWER:BOTTOM:ERR_RBV" (bi)
 "SL1K0:POWER:BOTTOM:GO" (bo)
 "SL1K0:POWER:BOTTOM:GO_RBV" (bi)
 "SL1K0:POWER:BOTTOM:LOCKED_RBV" (bi)
 "SL1K0:POWER:BOTTOM:MOVE_OK_RBV" (bi)
 "SL1K0:POWER:BOTTOM:NAME_RBV" (waveform)
 "SL1K0:POWER:BOTTOM:RTD:01:CONN_RBV" (bi)
 "SL1K0:POWER:BOTTOM:RTD:01:ERR_RBV" (bi)
 "SL1K0:POWER:BOTTOM:RTD:01:TEMP_RBV" (ai)
 "SL1K0:POWER:BOTTOM:RTD:02:CONN_RBV" (bi)
 "SL1K0:POWER:BOTTOM:RTD:02:ERR_RBV" (bi)
 "SL1K0:POWER:BOTTOM:RTD:02:TEMP_RBV" (ai)
 "SL1K0:POWER:BOTTOM:SETPOINT" (ao)
 "SL1K0:POWER:BOTTOM:SETPOINT_RBV" (ai)
 "SL1K0:POWER:BOTTOM:VALID_RBV" (bi)
 "SL1K0:POWER:BOTTOM:VELO" (ao)
 "SL1K0:POWER:BOTTOM:VELO_RBV" (ai)
 "SL1K0:POWER:CLOSE" (bo)
 "SL1K0:POWER:CLOSE_RBV" (bi)
 "SL1K0:POWER:FSW:FLOW" (bo)
 "SL1K0:POWER:FSW:FLOW_RBV" (bi)
 "SL1K0:POWER:GO" (bo)
 "SL1K0:POWER:GO_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bBusy_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bDone_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bEnable" (bo)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bError_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bExecute" (bo)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bExecute_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bHome_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bReset" (bo)
 "SL1K0:POWER:MMS:BOTTOM:PLC:bReset_RBV" (bi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fAcceleration" (ao)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV" (ai)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fDeceleration" (ao)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV" (ai)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fHomePosition" (ao)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV" (ai)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fPosition" (ao)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fPosition_RBV" (ai)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fVelocity" (ao)
 "SL1K0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV" (ai)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nCmdData" (longout)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV" (longin)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nCommand" (longout)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nCommand_RBV" (longin)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV" (longin)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV" (longin)
 "SL1K0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV" (waveform)
 "SL1K0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bAllEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bBusy_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bDone_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bEnable" (bo)
 "SL1K0:POWER:MMS:NORTH:PLC:bEnableDone_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bError_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bExecute" (bo)
 "SL1K0:POWER:MMS:NORTH:PLC:bExecute_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bHome_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:bReset" (bo)
 "SL1K0:POWER:MMS:NORTH:PLC:bReset_RBV" (bi)
 "SL1K0:POWER:MMS:NORTH:PLC:fAcceleration" (ao)
 "SL1K0:POWER:MMS:NORTH:PLC:fAcceleration_RBV" (ai)
 "SL1K0:POWER:MMS:NORTH:PLC:fDeceleration" (ao)
 "SL1K0:POWER:MMS:NORTH:PLC:fDeceleration_RBV" (ai)
 "SL1K0:POWER:MMS:NORTH:PLC:fHomePosition" (ao)
 "SL1K0:POWER:MMS:NORTH:PLC:fHomePosition_RBV" (ai)
 "SL1K0:POWER:MMS:NORTH:PLC:fPosition" (ao)
 "SL1K0:POWER:MMS:NORTH:PLC:fPosition_RBV" (ai)
 "SL1K0:POWER:MMS:NORTH:PLC:fVelocity" (ao)
 "SL1K0:POWER:MMS:NORTH:PLC:fVelocity_RBV" (ai)
 "SL1K0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:NORTH:PLC:nCmdData" (longout)
 "SL1K0:POWER:MMS:NORTH:PLC:nCmdData_RBV" (longin)
 "SL1K0:POWER:MMS:NORTH:PLC:nCommand" (longout)
 "SL1K0:POWER:MMS:NORTH:PLC:nCommand_RBV" (longin)
 "SL1K0:POWER:MMS:NORTH:PLC:nEnableMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:NORTH:PLC:nErrorId_RBV" (longin)
 "SL1K0:POWER:MMS:NORTH:PLC:nHomingMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV" (longin)
 "SL1K0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV" (waveform)
 "SL1K0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bBusy_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bDone_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bEnable" (bo)
 "SL1K0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bError_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bExecute" (bo)
 "SL1K0:POWER:MMS:SOUTH:PLC:bExecute_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bHome_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:bReset" (bo)
 "SL1K0:POWER:MMS:SOUTH:PLC:bReset_RBV" (bi)
 "SL1K0:POWER:MMS:SOUTH:PLC:fAcceleration" (ao)
 "SL1K0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV" (ai)
 "SL1K0:POWER:MMS:SOUTH:PLC:fDeceleration" (ao)
 "SL1K0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV" (ai)
 "SL1K0:POWER:MMS:SOUTH:PLC:fHomePosition" (ao)
 "SL1K0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV" (ai)
 "SL1K0:POWER:MMS:SOUTH:PLC:fPosition" (ao)
 "SL1K0:POWER:MMS:SOUTH:PLC:fPosition_RBV" (ai)
 "SL1K0:POWER:MMS:SOUTH:PLC:fVelocity" (ao)
 "SL1K0:POWER:MMS:SOUTH:PLC:fVelocity_RBV" (ai)
 "SL1K0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:SOUTH:PLC:nCmdData" (longout)
 "SL1K0:POWER:MMS:SOUTH:PLC:nCmdData_RBV" (longin)
 "SL1K0:POWER:MMS:SOUTH:PLC:nCommand" (longout)
 "SL1K0:POWER:MMS:SOUTH:PLC:nCommand_RBV" (longin)
 "SL1K0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:SOUTH:PLC:nErrorId_RBV" (longin)
 "SL1K0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV" (longin)
 "SL1K0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV" (waveform)
 "SL1K0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bAllEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bBusy_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bDone_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bEnable" (bo)
 "SL1K0:POWER:MMS:TOP:PLC:bEnableDone_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bError_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bExecute" (bo)
 "SL1K0:POWER:MMS:TOP:PLC:bExecute_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bGantryAxis_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bHome_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bPowerSelf_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:bReset" (bo)
 "SL1K0:POWER:MMS:TOP:PLC:bReset_RBV" (bi)
 "SL1K0:POWER:MMS:TOP:PLC:fAcceleration" (ao)
 "SL1K0:POWER:MMS:TOP:PLC:fAcceleration_RBV" (ai)
 "SL1K0:POWER:MMS:TOP:PLC:fDeceleration" (ao)
 "SL1K0:POWER:MMS:TOP:PLC:fDeceleration_RBV" (ai)
 "SL1K0:POWER:MMS:TOP:PLC:fHomePosition" (ao)
 "SL1K0:POWER:MMS:TOP:PLC:fHomePosition_RBV" (ai)
 "SL1K0:POWER:MMS:TOP:PLC:fPosition" (ao)
 "SL1K0:POWER:MMS:TOP:PLC:fPosition_RBV" (ai)
 "SL1K0:POWER:MMS:TOP:PLC:fVelocity" (ao)
 "SL1K0:POWER:MMS:TOP:PLC:fVelocity_RBV" (ai)
 "SL1K0:POWER:MMS:TOP:PLC:nBrakeMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:TOP:PLC:nCmdData" (longout)
 "SL1K0:POWER:MMS:TOP:PLC:nCmdData_RBV" (longin)
 "SL1K0:POWER:MMS:TOP:PLC:nCommand" (longout)
 "SL1K0:POWER:MMS:TOP:PLC:nCommand_RBV" (longin)
 "SL1K0:POWER:MMS:TOP:PLC:nEnableMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:TOP:PLC:nErrorId_RBV" (longin)
 "SL1K0:POWER:MMS:TOP:PLC:nHomingMode_RBV" (mbbi)
 "SL1K0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV" (longin)
 "SL1K0:POWER:MMS:TOP:PLC:sErrorMessage_RBV" (waveform)
 "SL1K0:POWER:NORTH:ACCL" (ao)
 "SL1K0:POWER:NORTH:ACCL_RBV" (ai)
 "SL1K0:POWER:NORTH:AT_STATE_RBV" (bi)
 "SL1K0:POWER:NORTH:BUSY_RBV" (bi)
 "SL1K0:POWER:NORTH:DCCL" (ao)
 "SL1K0:POWER:NORTH:DCCL_RBV" (ai)
 "SL1K0:POWER:NORTH:DELTA" (ao)
 "SL1K0:POWER:NORTH:DELTA_RBV" (ai)
 "SL1K0:POWER:NORTH:DMOV_RBV" (bi)
 "SL1K0:POWER:NORTH:ERRMSG_RBV" (waveform)
 "SL1K0:POWER:NORTH:ERR_RBV" (bi)
 "SL1K0:POWER:NORTH:GO" (bo)
 "SL1K0:POWER:NORTH:GO_RBV" (bi)
 "SL1K0:POWER:NORTH:LOCKED_RBV" (bi)
 "SL1K0:POWER:NORTH:MOVE_OK_RBV" (bi)
 "SL1K0:POWER:NORTH:NAME_RBV" (waveform)
 "SL1K0:POWER:NORTH:RTD:01:CONN_RBV" (bi)
 "SL1K0:POWER:NORTH:RTD:01:ERR_RBV" (bi)
 "SL1K0:POWER:NORTH:RTD:01:TEMP_RBV" (ai)
 "SL1K0:POWER:NORTH:RTD:02:CONN_RBV" (bi)
 "SL1K0:POWER:NORTH:RTD:02:ERR_RBV" (bi)
 "SL1K0:POWER:NORTH:RTD:02:TEMP_RBV" (ai)
 "SL1K0:POWER:NORTH:SETPOINT" (ao)
 "SL1K0:POWER:NORTH:SETPOINT_RBV" (ai)
 "SL1K0:POWER:NORTH:VALID_RBV" (bi)
 "SL1K0:POWER:NORTH:VELO" (ao)
 "SL1K0:POWER:NORTH:VELO_RBV" (ai)
 "SL1K0:POWER:OPEN" (bo)
 "SL1K0:POWER:OPEN_RBV" (bi)
 "SL1K0:POWER:PMPS_OK_RBV" (bi)
 "SL1K0:POWER:SOUTH:ACCL" (ao)
 "SL1K0:POWER:SOUTH:ACCL_RBV" (ai)
 "SL1K0:POWER:SOUTH:AT_STATE_RBV" (bi)
 "SL1K0:POWER:SOUTH:BUSY_RBV" (bi)
 "SL1K0:POWER:SOUTH:DCCL" (ao)
 "SL1K0:POWER:SOUTH:DCCL_RBV" (ai)
 "SL1K0:POWER:SOUTH:DELTA" (ao)
 "SL1K0:POWER:SOUTH:DELTA_RBV" (ai)
 "SL1K0:POWER:SOUTH:DMOV_RBV" (bi)
 "SL1K0:POWER:SOUTH:ERRMSG_RBV" (waveform)
 "SL1K0:POWER:SOUTH:ERR_RBV" (bi)
 "SL1K0:POWER:SOUTH:GO" (bo)
 "SL1K0:POWER:SOUTH:GO_RBV" (bi)
 "SL1K0:POWER:SOUTH:LOCKED_RBV" (bi)
 "SL1K0:POWER:SOUTH:MOVE_OK_RBV" (bi)
 "SL1K0:POWER:SOUTH:NAME_RBV" (waveform)
 "SL1K0:POWER:SOUTH:RTD:01:CONN_RBV" (bi)
 "SL1K0:POWER:SOUTH:RTD:01:ERR_RBV" (bi)
 "SL1K0:POWER:SOUTH:RTD:01:TEMP_RBV" (ai)
 "SL1K0:POWER:SOUTH:RTD:02:CONN_RBV" (bi)
 "SL1K0:POWER:SOUTH:RTD:02:ERR_RBV" (bi)
 "SL1K0:POWER:SOUTH:RTD:02:TEMP_RBV" (ai)
 "SL1K0:POWER:SOUTH:SETPOINT" (ao)
 "SL1K0:POWER:SOUTH:SETPOINT_RBV" (ai)
 "SL1K0:POWER:SOUTH:VALID_RBV" (bi)
 "SL1K0:POWER:SOUTH:VELO" (ao)
 "SL1K0:POWER:SOUTH:VELO_RBV" (ai)
 "SL1K0:POWER:TOP:ACCL" (ao)
 "SL1K0:POWER:TOP:ACCL_RBV" (ai)
 "SL1K0:POWER:TOP:AT_STATE_RBV" (bi)
 "SL1K0:POWER:TOP:BUSY_RBV" (bi)
 "SL1K0:POWER:TOP:DCCL" (ao)
 "SL1K0:POWER:TOP:DCCL_RBV" (ai)
 "SL1K0:POWER:TOP:DELTA" (ao)
 "SL1K0:POWER:TOP:DELTA_RBV" (ai)
 "SL1K0:POWER:TOP:DMOV_RBV" (bi)
 "SL1K0:POWER:TOP:ERRMSG_RBV" (waveform)
 "SL1K0:POWER:TOP:ERR_RBV" (bi)
 "SL1K0:POWER:TOP:GO" (bo)
 "SL1K0:POWER:TOP:GO_RBV" (bi)
 "SL1K0:POWER:TOP:LOCKED_RBV" (bi)
 "SL1K0:POWER:TOP:MOVE_OK_RBV" (bi)
 "SL1K0:POWER:TOP:NAME_RBV" (waveform)
 "SL1K0:POWER:TOP:RTD:01:CONN_RBV" (bi)
 "SL1K0:POWER:TOP:RTD:01:ERR_RBV" (bi)
 "SL1K0:POWER:TOP:RTD:01:TEMP_RBV" (ai)
 "SL1K0:POWER:TOP:RTD:02:CONN_RBV" (bi)
 "SL1K0:POWER:TOP:RTD:02:ERR_RBV" (bi)
 "SL1K0:POWER:TOP:RTD:02:TEMP_RBV" (ai)
 "SL1K0:POWER:TOP:SETPOINT" (ao)
 "SL1K0:POWER:TOP:SETPOINT_RBV" (ai)
 "SL1K0:POWER:TOP:VALID_RBV" (bi)
 "SL1K0:POWER:TOP:VELO" (ao)
 "SL1K0:POWER:TOP:VELO_RBV" (ai)
 "SL1K0:POWER:XCEN_REQ" (ao)
 "SL1K0:POWER:XCEN_REQ_RBV" (ai)
 "SL1K0:POWER:XCEN_SETZERO" (bo)
 "SL1K0:POWER:XCEN_SETZERO_RBV" (bi)
 "SL1K0:POWER:XWID_REQ" (ao)
 "SL1K0:POWER:XWID_REQ_RBV" (ai)
 "SL1K0:POWER:YCEN_REQ" (ao)
 "SL1K0:POWER:YCEN_REQ_RBV" (ai)
 "SL1K0:POWER:YCEN_SETZERO" (bo)
 "SL1K0:POWER:YCEN_SETZERO_RBV" (bi)
 "SL1K0:POWER:YWID_REQ" (ao)
 "SL1K0:POWER:YWID_REQ_RBV" (ai)
 "SL2K0:POWER:ACTUAL_XCENTER" (ao)
 "SL2K0:POWER:ACTUAL_XCENTER_RBV" (ai)
 "SL2K0:POWER:ACTUAL_XWIDTH" (ao)
 "SL2K0:POWER:ACTUAL_XWIDTH_RBV" (ai)
 "SL2K0:POWER:ACTUAL_YCENTER" (ao)
 "SL2K0:POWER:ACTUAL_YCENTER_RBV" (ai)
 "SL2K0:POWER:ACTUAL_YWIDTH" (ao)
 "SL2K0:POWER:ACTUAL_YWIDTH_RBV" (ai)
 "SL2K0:POWER:BLOCK" (bo)
 "SL2K0:POWER:BLOCK_RBV" (bi)
 "SL2K0:POWER:BOTTOM:ACCL" (ao)
 "SL2K0:POWER:BOTTOM:ACCL_RBV" (ai)
 "SL2K0:POWER:BOTTOM:AT_STATE_RBV" (bi)
 "SL2K0:POWER:BOTTOM:BUSY_RBV" (bi)
 "SL2K0:POWER:BOTTOM:DCCL" (ao)
 "SL2K0:POWER:BOTTOM:DCCL_RBV" (ai)
 "SL2K0:POWER:BOTTOM:DELTA" (ao)
 "SL2K0:POWER:BOTTOM:DELTA_RBV" (ai)
 "SL2K0:POWER:BOTTOM:DMOV_RBV" (bi)
 "SL2K0:POWER:BOTTOM:ERRMSG_RBV" (waveform)
 "SL2K0:POWER:BOTTOM:ERR_RBV" (bi)
 "SL2K0:POWER:BOTTOM:GO" (bo)
 "SL2K0:POWER:BOTTOM:GO_RBV" (bi)
 "SL2K0:POWER:BOTTOM:LOCKED_RBV" (bi)
 "SL2K0:POWER:BOTTOM:MOVE_OK_RBV" (bi)
 "SL2K0:POWER:BOTTOM:NAME_RBV" (waveform)
 "SL2K0:POWER:BOTTOM:RTD:01:CONN_RBV" (bi)
 "SL2K0:POWER:BOTTOM:RTD:01:ERR_RBV" (bi)
 "SL2K0:POWER:BOTTOM:RTD:01:TEMP_RBV" (ai)
 "SL2K0:POWER:BOTTOM:RTD:02:CONN_RBV" (bi)
 "SL2K0:POWER:BOTTOM:RTD:02:ERR_RBV" (bi)
 "SL2K0:POWER:BOTTOM:RTD:02:TEMP_RBV" (ai)
 "SL2K0:POWER:BOTTOM:SETPOINT" (ao)
 "SL2K0:POWER:BOTTOM:SETPOINT_RBV" (ai)
 "SL2K0:POWER:BOTTOM:VALID_RBV" (bi)
 "SL2K0:POWER:BOTTOM:VELO" (ao)
 "SL2K0:POWER:BOTTOM:VELO_RBV" (ai)
 "SL2K0:POWER:CLOSE" (bo)
 "SL2K0:POWER:CLOSE_RBV" (bi)
 "SL2K0:POWER:FSW:FLOW" (bo)
 "SL2K0:POWER:FSW:FLOW_RBV" (bi)
 "SL2K0:POWER:GO" (bo)
 "SL2K0:POWER:GO_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bBusy_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bDone_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bEnable" (bo)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bError_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bExecute" (bo)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bExecute_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bHome_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bReset" (bo)
 "SL2K0:POWER:MMS:BOTTOM:PLC:bReset_RBV" (bi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fAcceleration" (ao)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV" (ai)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fDeceleration" (ao)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV" (ai)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fHomePosition" (ao)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV" (ai)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fPosition" (ao)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fPosition_RBV" (ai)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fVelocity" (ao)
 "SL2K0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV" (ai)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nCmdData" (longout)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV" (longin)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nCommand" (longout)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nCommand_RBV" (longin)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV" (longin)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV" (longin)
 "SL2K0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV" (waveform)
 "SL2K0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bAllEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bBusy_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bDone_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bEnable" (bo)
 "SL2K0:POWER:MMS:NORTH:PLC:bEnableDone_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bError_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bExecute" (bo)
 "SL2K0:POWER:MMS:NORTH:PLC:bExecute_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bHome_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:bReset" (bo)
 "SL2K0:POWER:MMS:NORTH:PLC:bReset_RBV" (bi)
 "SL2K0:POWER:MMS:NORTH:PLC:fAcceleration" (ao)
 "SL2K0:POWER:MMS:NORTH:PLC:fAcceleration_RBV" (ai)
 "SL2K0:POWER:MMS:NORTH:PLC:fDeceleration" (ao)
 "SL2K0:POWER:MMS:NORTH:PLC:fDeceleration_RBV" (ai)
 "SL2K0:POWER:MMS:NORTH:PLC:fHomePosition" (ao)
 "SL2K0:POWER:MMS:NORTH:PLC:fHomePosition_RBV" (ai)
 "SL2K0:POWER:MMS:NORTH:PLC:fPosition" (ao)
 "SL2K0:POWER:MMS:NORTH:PLC:fPosition_RBV" (ai)
 "SL2K0:POWER:MMS:NORTH:PLC:fVelocity" (ao)
 "SL2K0:POWER:MMS:NORTH:PLC:fVelocity_RBV" (ai)
 "SL2K0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:NORTH:PLC:nCmdData" (longout)
 "SL2K0:POWER:MMS:NORTH:PLC:nCmdData_RBV" (longin)
 "SL2K0:POWER:MMS:NORTH:PLC:nCommand" (longout)
 "SL2K0:POWER:MMS:NORTH:PLC:nCommand_RBV" (longin)
 "SL2K0:POWER:MMS:NORTH:PLC:nEnableMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:NORTH:PLC:nErrorId_RBV" (longin)
 "SL2K0:POWER:MMS:NORTH:PLC:nHomingMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV" (longin)
 "SL2K0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV" (waveform)
 "SL2K0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bBusy_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bDone_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bEnable" (bo)
 "SL2K0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bError_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bExecute" (bo)
 "SL2K0:POWER:MMS:SOUTH:PLC:bExecute_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bHome_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:bReset" (bo)
 "SL2K0:POWER:MMS:SOUTH:PLC:bReset_RBV" (bi)
 "SL2K0:POWER:MMS:SOUTH:PLC:fAcceleration" (ao)
 "SL2K0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV" (ai)
 "SL2K0:POWER:MMS:SOUTH:PLC:fDeceleration" (ao)
 "SL2K0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV" (ai)
 "SL2K0:POWER:MMS:SOUTH:PLC:fHomePosition" (ao)
 "SL2K0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV" (ai)
 "SL2K0:POWER:MMS:SOUTH:PLC:fPosition" (ao)
 "SL2K0:POWER:MMS:SOUTH:PLC:fPosition_RBV" (ai)
 "SL2K0:POWER:MMS:SOUTH:PLC:fVelocity" (ao)
 "SL2K0:POWER:MMS:SOUTH:PLC:fVelocity_RBV" (ai)
 "SL2K0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:SOUTH:PLC:nCmdData" (longout)
 "SL2K0:POWER:MMS:SOUTH:PLC:nCmdData_RBV" (longin)
 "SL2K0:POWER:MMS:SOUTH:PLC:nCommand" (longout)
 "SL2K0:POWER:MMS:SOUTH:PLC:nCommand_RBV" (longin)
 "SL2K0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:SOUTH:PLC:nErrorId_RBV" (longin)
 "SL2K0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV" (longin)
 "SL2K0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV" (waveform)
 "SL2K0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bAllEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bBusy_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bDone_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bEnable" (bo)
 "SL2K0:POWER:MMS:TOP:PLC:bEnableDone_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bError_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bExecute" (bo)
 "SL2K0:POWER:MMS:TOP:PLC:bExecute_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bGantryAxis_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bHome_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bPowerSelf_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:bReset" (bo)
 "SL2K0:POWER:MMS:TOP:PLC:bReset_RBV" (bi)
 "SL2K0:POWER:MMS:TOP:PLC:fAcceleration" (ao)
 "SL2K0:POWER:MMS:TOP:PLC:fAcceleration_RBV" (ai)
 "SL2K0:POWER:MMS:TOP:PLC:fDeceleration" (ao)
 "SL2K0:POWER:MMS:TOP:PLC:fDeceleration_RBV" (ai)
 "SL2K0:POWER:MMS:TOP:PLC:fHomePosition" (ao)
 "SL2K0:POWER:MMS:TOP:PLC:fHomePosition_RBV" (ai)
 "SL2K0:POWER:MMS:TOP:PLC:fPosition" (ao)
 "SL2K0:POWER:MMS:TOP:PLC:fPosition_RBV" (ai)
 "SL2K0:POWER:MMS:TOP:PLC:fVelocity" (ao)
 "SL2K0:POWER:MMS:TOP:PLC:fVelocity_RBV" (ai)
 "SL2K0:POWER:MMS:TOP:PLC:nBrakeMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:TOP:PLC:nCmdData" (longout)
 "SL2K0:POWER:MMS:TOP:PLC:nCmdData_RBV" (longin)
 "SL2K0:POWER:MMS:TOP:PLC:nCommand" (longout)
 "SL2K0:POWER:MMS:TOP:PLC:nCommand_RBV" (longin)
 "SL2K0:POWER:MMS:TOP:PLC:nEnableMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:TOP:PLC:nErrorId_RBV" (longin)
 "SL2K0:POWER:MMS:TOP:PLC:nHomingMode_RBV" (mbbi)
 "SL2K0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV" (longin)
 "SL2K0:POWER:MMS:TOP:PLC:sErrorMessage_RBV" (waveform)
 "SL2K0:POWER:NORTH:ACCL" (ao)
 "SL2K0:POWER:NORTH:ACCL_RBV" (ai)
 "SL2K0:POWER:NORTH:AT_STATE_RBV" (bi)
 "SL2K0:POWER:NORTH:BUSY_RBV" (bi)
 "SL2K0:POWER:NORTH:DCCL" (ao)
 "SL2K0:POWER:NORTH:DCCL_RBV" (ai)
 "SL2K0:POWER:NORTH:DELTA" (ao)
 "SL2K0:POWER:NORTH:DELTA_RBV" (ai)
 "SL2K0:POWER:NORTH:DMOV_RBV" (bi)
 "SL2K0:POWER:NORTH:ERRMSG_RBV" (waveform)
 "SL2K0:POWER:NORTH:ERR_RBV" (bi)
 "SL2K0:POWER:NORTH:GO" (bo)
 "SL2K0:POWER:NORTH:GO_RBV" (bi)
 "SL2K0:POWER:NORTH:LOCKED_RBV" (bi)
 "SL2K0:POWER:NORTH:MOVE_OK_RBV" (bi)
 "SL2K0:POWER:NORTH:NAME_RBV" (waveform)
 "SL2K0:POWER:NORTH:RTD:01:CONN_RBV" (bi)
 "SL2K0:POWER:NORTH:RTD:01:ERR_RBV" (bi)
 "SL2K0:POWER:NORTH:RTD:01:TEMP_RBV" (ai)
 "SL2K0:POWER:NORTH:RTD:02:CONN_RBV" (bi)
 "SL2K0:POWER:NORTH:RTD:02:ERR_RBV" (bi)
 "SL2K0:POWER:NORTH:RTD:02:TEMP_RBV" (ai)
 "SL2K0:POWER:NORTH:SETPOINT" (ao)
 "SL2K0:POWER:NORTH:SETPOINT_RBV" (ai)
 "SL2K0:POWER:NORTH:VALID_RBV" (bi)
 "SL2K0:POWER:NORTH:VELO" (ao)
 "SL2K0:POWER:NORTH:VELO_RBV" (ai)
 "SL2K0:POWER:OPEN" (bo)
 "SL2K0:POWER:OPEN_RBV" (bi)
 "SL2K0:POWER:PMPS_OK_RBV" (bi)
 "SL2K0:POWER:SOUTH:ACCL" (ao)
 "SL2K0:POWER:SOUTH:ACCL_RBV" (ai)
 "SL2K0:POWER:SOUTH:AT_STATE_RBV" (bi)
 "SL2K0:POWER:SOUTH:BUSY_RBV" (bi)
 "SL2K0:POWER:SOUTH:DCCL" (ao)
 "SL2K0:POWER:SOUTH:DCCL_RBV" (ai)
 "SL2K0:POWER:SOUTH:DELTA" (ao)
 "SL2K0:POWER:SOUTH:DELTA_RBV" (ai)
 "SL2K0:POWER:SOUTH:DMOV_RBV" (bi)
 "SL2K0:POWER:SOUTH:ERRMSG_RBV" (waveform)
 "SL2K0:POWER:SOUTH:ERR_RBV" (bi)
 "SL2K0:POWER:SOUTH:GO" (bo)
 "SL2K0:POWER:SOUTH:GO_RBV" (bi)
 "SL2K0:POWER:SOUTH:LOCKED_RBV" (bi)
 "SL2K0:POWER:SOUTH:MOVE_OK_RBV" (bi)
 "SL2K0:POWER:SOUTH:NAME_RBV" (waveform)
 "SL2K0:POWER:SOUTH:RTD:01:CONN_RBV" (bi)
 "SL2K0:POWER:SOUTH:RTD:01:ERR_RBV" (bi)
 "SL2K0:POWER:SOUTH:RTD:01:TEMP_RBV" (ai)
 "SL2K0:POWER:SOUTH:RTD:02:CONN_RBV" (bi)
 "SL2K0:POWER:SOUTH:RTD:02:ERR_RBV" (bi)
 "SL2K0:POWER:SOUTH:RTD:02:TEMP_RBV" (ai)
 "SL2K0:POWER:SOUTH:SETPOINT" (ao)
 "SL2K0:POWER:SOUTH:SETPOINT_RBV" (ai)
 "SL2K0:POWER:SOUTH:VALID_RBV" (bi)
 "SL2K0:POWER:SOUTH:VELO" (ao)
 "SL2K0:POWER:SOUTH:VELO_RBV" (ai)
 "SL2K0:POWER:TOP:ACCL" (ao)
 "SL2K0:POWER:TOP:ACCL_RBV" (ai)
 "SL2K0:POWER:TOP:AT_STATE_RBV" (bi)
 "SL2K0:POWER:TOP:BUSY_RBV" (bi)
 "SL2K0:POWER:TOP:DCCL" (ao)
 "SL2K0:POWER:TOP:DCCL_RBV" (ai)
 "SL2K0:POWER:TOP:DELTA" (ao)
 "SL2K0:POWER:TOP:DELTA_RBV" (ai)
 "SL2K0:POWER:TOP:DMOV_RBV" (bi)
 "SL2K0:POWER:TOP:ERRMSG_RBV" (waveform)
 "SL2K0:POWER:TOP:ERR_RBV" (bi)
 "SL2K0:POWER:TOP:GO" (bo)
 "SL2K0:POWER:TOP:GO_RBV" (bi)
 "SL2K0:POWER:TOP:LOCKED_RBV" (bi)
 "SL2K0:POWER:TOP:MOVE_OK_RBV" (bi)
 "SL2K0:POWER:TOP:NAME_RBV" (waveform)
 "SL2K0:POWER:TOP:RTD:01:CONN_RBV" (bi)
 "SL2K0:POWER:TOP:RTD:01:ERR_RBV" (bi)
 "SL2K0:POWER:TOP:RTD:01:TEMP_RBV" (ai)
 "SL2K0:POWER:TOP:RTD:02:CONN_RBV" (bi)
 "SL2K0:POWER:TOP:RTD:02:ERR_RBV" (bi)
 "SL2K0:POWER:TOP:RTD:02:TEMP_RBV" (ai)
 "SL2K0:POWER:TOP:SETPOINT" (ao)
 "SL2K0:POWER:TOP:SETPOINT_RBV" (ai)
 "SL2K0:POWER:TOP:VALID_RBV" (bi)
 "SL2K0:POWER:TOP:VELO" (ao)
 "SL2K0:POWER:TOP:VELO_RBV" (ai)
 "SL2K0:POWER:XCEN_REQ" (ao)
 "SL2K0:POWER:XCEN_REQ_RBV" (ai)
 "SL2K0:POWER:XCEN_SETZERO" (bo)
 "SL2K0:POWER:XCEN_SETZERO_RBV" (bi)
 "SL2K0:POWER:XWID_REQ" (ao)
 "SL2K0:POWER:XWID_REQ_RBV" (ai)
 "SL2K0:POWER:YCEN_REQ" (ao)
 "SL2K0:POWER:YCEN_REQ_RBV" (ai)
 "SL2K0:POWER:YCEN_SETZERO" (bo)
 "SL2K0:POWER:YCEN_SETZERO_RBV" (bi)
 "SL2K0:POWER:YWID_REQ" (ao)
 "SL2K0:POWER:YWID_REQ_RBV" (ai)
```

EPICS database
--------------
```
record(longin, "$(PREFIX)LCLSGeneral:LogPort_RBV") {
  field(DESC, "The log host UDP port")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/GVL_Logger.iLogPort?")
}

record(longout, "$(PREFIX)LCLSGeneral:LogPort") {
  field(DESC, "The log host UDP port")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/GVL_Logger.iLogPort=")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(PREFIX)LCLSGeneral:LogHost_RBV") {
  field(DESC, "The log host IP address")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/GVL_Logger.cLogHost?")
  field(FTVL, "CHAR")
  field(NELM, "15")
}

record(waveform, "$(PREFIX)LCLSGeneral:LogHost") {
  field(DESC, "The log host IP address")
  field(DTYP, "asynInt8ArrayOut")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/GVL_Logger.cLogHost=")
  field(FTVL, "CHAR")
  field(NELM, "15")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "PLC:KFE:MOTION:PLACEHOLDER_RBV") {
  field(DESC, "ads:PRG_1_PlcTask.nPlaceholder")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_1_PlcTask.nPlaceholder?")
}

record(longout, "PLC:KFE:MOTION:PLACEHOLDER") {
  field(DESC, "ads:PRG_1_PlcTask.nPlaceholder")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_1_PlcTask.nPlaceholder=")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM1K0:XTES:MMS:STATE:SET_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f....fbStates.enumSet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.enumSet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
}

record(mbbo, "IM1K0:XTES:MMS:STATE:SET") {
  field(DESC, "ads:PRG_IM1K0_XTES.f....fbStates.enumSet")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.enumSet=")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM1K0:XTES:MMS:STATE:GET_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f....fbStates.enumGet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.enumGet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
}

record(waveform, "IM1K0:XTES:MMS:STATE:01:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:02:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:03:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:04:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:05:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:06:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:07:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:08:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:09:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:10:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:11:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:12:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:13:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:14:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MMS:STATE:15:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "IM1K0:XTES:MMS:STATE:01:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:01:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:02:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:02:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:03:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:03:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:04:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:04:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:05:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:05:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:06:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:06:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:07:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:07:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:08:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:08:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:09:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:09:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:10:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:10:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:11:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:11:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:12:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:12:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:13:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:13:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:14:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:14:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:15:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:15:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:01:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:01:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:02:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:02:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:03:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:03:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:04:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:04:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:05:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:05:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:06:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:06:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:07:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:07:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:08:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:08:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:09:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:09:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:10:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:10:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:11:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:11:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:12:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:12:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:13:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:13:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:14:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:14:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:15:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:15:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:01:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:01:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:02:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:02:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:03:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:03:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:04:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:04:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:05:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:05:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:06:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:06:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:07:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:07:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:08:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:08:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:09:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:09:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:10:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:10:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:11:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:11:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:12:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:12:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:13:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:13:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:14:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:14:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:15:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:15:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:01:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:01:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:02:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:02:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:03:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:03:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:04:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:04:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:05:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:05:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:06:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:06:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:07:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:07:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:08:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:08:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:09:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:09:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:10:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:10:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:11:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:11:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:12:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:12:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:13:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:13:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:14:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:14:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:15:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:15:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:01:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:01:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:02:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:02:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:03:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:03:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:04:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:04:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:05:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:05:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:06:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:06:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:07:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:07:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:08:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:08:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:09:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:09:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:10:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:10:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:11:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:11:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:12:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:12:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:13:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:13:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:14:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:14:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:STATE:15:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:STATE:15:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "IM1K0:XTES:MMS:STATE:01:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:02:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:03:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:04:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:05:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:06:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:07:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:08:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:09:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:10:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:11:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:12:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:13:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:14:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:15:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:01:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:02:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:03:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:04:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:05:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:06:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:07:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:08:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:09:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:10:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:11:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:12:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:13:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:14:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:15:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:01:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[1].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:02:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[2].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:03:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[3].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:04:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[4].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:05:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[5].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:06:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[6].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:07:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[7].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:08:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[8].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:09:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[9].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:10:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[10].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:11:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[11].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:12:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[12].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:13:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[13].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:14:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[14].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:15:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.arrStates[15].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:STATE:RESET_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...ateManager.bReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.bReset?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "IM1K0:XTES:MMS:STATE:RESET") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...ateManager.bReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.bReset=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:MMS:STATE:ERR_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...ateManager.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(longin, "IM1K0:XTES:MMS:STATE:ERRID_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...eManager.nErrorId")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.nErrorId?")
}

record(waveform, "IM1K0:XTES:MMS:STATE:ERRMSG_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...ger.sErrorMessage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM1K0:XTES:MMS:STATE:BUSY_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...tateManager.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "IM1K0:XTES:MMS:STATE:DONE_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...tateManager.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbStates.fbStateManager.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "IM1K0:XTES:MFW:ERR:RESET_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...Wheel.bResetError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.bResetError?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM1K0:XTES:MFW:ERR:RESET") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...Wheel.bResetError")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.bResetError=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM1K0:XTES:MFW:SET_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...lterWheel.nSetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.nSetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
}

record(mbbo, "IM1K0:XTES:MFW:SET") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...lterWheel.nSetPos")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.nSetPos=")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM1K0:XTES:MFW:GET_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...lterWheel.nGetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.nGetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
}

record(waveform, "IM1K0:XTES:MFW:ERR:MSG_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...rWheel.sLastError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.sLastError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MFW:RAW:CMD_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...rWheel.fbCom.sCmd")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.sCmd?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K0:XTES:MFW:RAW:CMD") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...rWheel.fbCom.sCmd")
  field(DTYP, "asynInt8ArrayOut")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.sCmd=")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:MFW:RAW:SEND_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...Wheel.fbCom.bSend")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.bSend?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM1K0:XTES:MFW:RAW:SEND") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...Wheel.fbCom.bSend")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.bSend=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "IM1K0:XTES:MFW:RAW:RESP_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...l.fbCom.sResponse")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.sResponse?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM1K0:XTES:MFW:RAW:DONE_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...Wheel.fbCom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.bDone?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(mbbi, "IM1K0:XTES:MFW:RAW:ERR:SER_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...SerialLineErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.eSerialLineErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
}

record(mbbi, "IM1K0:XTES:MFW:RAW:ERR:SEND_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...bCom.eSendErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.eSendErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
}

record(mbbi, "IM1K0:XTES:MFW:RAW:ERR:RECV_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...bCom.eRecvErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFilterWheel.fbCom.eRecvErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
}

record(bi, "IM1K0:XTES:CAM:PWR_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...fbOpal.bOpalPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbOpal.bOpalPower?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM1K0:XTES:CAM:PWR") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...fbOpal.bOpalPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbOpal.bOpalPower=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:CAM:CIL:PWR_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f....fbOpal.bLedPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbOpal.bLedPower?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM1K0:XTES:CAM:CIL:PWR") {
  field(DESC, "ads:PRG_IM1K0_XTES.f....fbOpal.bLedPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbOpal.bLedPower=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:SFW:FLOW_RBV") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K0_XTES.fbIM1K0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM1K0:XTES:SFW:FLOW") {
  field(DESC, "ads:PRG_IM1K0_XTES.f...lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K0_XTES.fbIM1K0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM1K3:PPM:MMS:STATE:SET_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb....fbStates.enumSet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.enumSet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
}

record(mbbo, "IM1K3:PPM:MMS:STATE:SET") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb....fbStates.enumSet")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.enumSet=")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM1K3:PPM:MMS:STATE:GET_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb....fbStates.enumGet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.enumGet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "PowerMeter")
  field(THST, "PolishedYag")
  field(FRST, "FrostedYag")
}

record(waveform, "IM1K3:PPM:MMS:STATE:01:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:02:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:03:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:04:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:05:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:06:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:07:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:08:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:09:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:10:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:11:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:12:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:13:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:14:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM1K3:PPM:MMS:STATE:15:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "IM1K3:PPM:MMS:STATE:01:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:01:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:02:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:02:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:03:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:03:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:04:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:04:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:05:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:05:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:06:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:06:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:07:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:07:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:08:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:08:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:09:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:09:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:10:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:10:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:11:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:11:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:12:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:12:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:13:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:13:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:14:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:14:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:15:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:15:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:01:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:01:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:02:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:02:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:03:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:03:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:04:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:04:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:05:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:05:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:06:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:06:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:07:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:07:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:08:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:08:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:09:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:09:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:10:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:10:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:11:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:11:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:12:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:12:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:13:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:13:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:14:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:14:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:15:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:15:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:01:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:01:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:02:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:02:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:03:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:03:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:04:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:04:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:05:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:05:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:06:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:06:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:07:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:07:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:08:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:08:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:09:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:09:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:10:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:10:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:11:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:11:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:12:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:12:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:13:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:13:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:14:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:14:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:15:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:15:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:01:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:01:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:02:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:02:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:03:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:03:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:04:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:04:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:05:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:05:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:06:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:06:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:07:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:07:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:08:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:08:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:09:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:09:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:10:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:10:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:11:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:11:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:12:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:12:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:13:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:13:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:14:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:14:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:15:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:15:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:01:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:01:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:02:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:02:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:03:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:03:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:04:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:04:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:05:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:05:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:06:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:06:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:07:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:07:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:08:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:08:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:09:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:09:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:10:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:10:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:11:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:11:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:12:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:12:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:13:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:13:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:14:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:14:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:STATE:15:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:STATE:15:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "IM1K3:PPM:MMS:STATE:01:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:02:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:03:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:04:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:05:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:06:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:07:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:08:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:09:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:10:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:11:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:12:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:13:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:14:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:15:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:01:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:02:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:03:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:04:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:05:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:06:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:07:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:08:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:09:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:10:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:11:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:12:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:13:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:14:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:15:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:01:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[1].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:02:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[2].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:03:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[3].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:04:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[4].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:05:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[5].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:06:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[6].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:07:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[7].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:08:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[8].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:09:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[9].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:10:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[10].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:11:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[11].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:12:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[12].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:13:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[13].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:14:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[14].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:15:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.arrStates[15].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:STATE:RESET_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...ateManager.bReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.bReset?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "IM1K3:PPM:MMS:STATE:RESET") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...ateManager.bReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.bReset=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K3:PPM:MMS:STATE:ERR_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...ateManager.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(longin, "IM1K3:PPM:MMS:STATE:ERRID_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...eManager.nErrorId")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.nErrorId?")
}

record(waveform, "IM1K3:PPM:MMS:STATE:ERRMSG_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...ger.sErrorMessage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM1K3:PPM:MMS:STATE:BUSY_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...tateManager.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "IM1K3:PPM:MMS:STATE:DONE_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...tateManager.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbStates.fbStateManager.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "IM1K3:PPM:SPM:VOLT_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...werMeter.fVoltage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fVoltage?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(waveform, "IM1K3:PPM:SPM:VOLT_BUFFER_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...er.fVoltageBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fVoltageBuffer?")
  field(FTVL, "DOUBLE")
  field(NELM, "1000")
}

record(ai, "IM1K3:PPM:SPM:CALIB_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...rMeter.fCalibBase")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibBase?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(waveform, "IM1K3:PPM:SPM:CALIB_BUFFER_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb....fCalibBaseBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibBaseBuffer?")
  field(FTVL, "DOUBLE")
  field(NELM, "1000")
}

record(ai, "IM1K3:PPM:SPM:MJ_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...werMeter.fCalibMJ")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibMJ?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(waveform, "IM1K3:PPM:SPM:MJ_BUFFER_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...er.fCalibMJBuffer")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibMJBuffer?")
  field(FTVL, "DOUBLE")
  field(NELM, "1000")
}

record(ai, "IM1K3:PPM:SPM:STC:TEMP_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...hermoCouple.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fbThermoCouple.fTemp?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "IM1K3:PPM:SPM:STC:CONN_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...Couple.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fbThermoCouple.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "IM1K3:PPM:SPM:STC:ERR_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...ermoCouple.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fbThermoCouple.bError?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(ai, "IM1K3:PPM:SPM:CALIB:OFFSET_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...r.fCalibRelOffset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibRelOffset?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:SPM:CALIB:OFFSET") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...r.fCalibRelOffset")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibRelOffset=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:SPM:CALIB:RATIO_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...er.fCalibRelRatio")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibRelRatio?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:SPM:CALIB:RATIO") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...er.fCalibRelRatio")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibRelRatio=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:SPM:CALIB:MJ_RATIO_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...ter.fCalibMJRatio")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibMJRatio?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:SPM:CALIB:MJ_RATIO") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...ter.fCalibMJRatio")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbPowerMeter.fCalibMJRatio=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "IM1K3:PPM:CAM:PWR_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...fbGige.bGigePower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbGige.bGigePower?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM1K3:PPM:CAM:PWR") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...fbGige.bGigePower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbGige.bGigePower=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "IM1K3:PPM:CAM:CIL:PCT_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...lluminatorPercent")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbGige.fIlluminatorPercent?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:CAM:CIL:PCT") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...lluminatorPercent")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM1K3_PPM.fbIM1K3.fbGige.fIlluminatorPercent=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "IM1K3:PPM:SFM:MA_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb....fbFlowMeter.fRaw")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbFlowMeter.fRaw?")
}

record(ai, "IM1K3:PPM:SFM:FLOW_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...owMeter.fFlowRate")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbFlowMeter.fFlowRate?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ai, "IM1K3:PPM:YAG:STC:TEMP_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...hermoCouple.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbYagThermoCouple.fTemp?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "IM1K3:PPM:YAG:STC:CONN_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...Couple.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbYagThermoCouple.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "IM1K3:PPM:YAG:STC:ERR_RBV") {
  field(DESC, "ads:PRG_IM1K3_PPM.fb...ermoCouple.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM1K3_PPM.fbIM1K3.fbYagThermoCouple.bError?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(mbbi, "IM2K0:XTES:MMS:STATE:SET_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f....fbStates.enumSet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.enumSet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
}

record(mbbo, "IM2K0:XTES:MMS:STATE:SET") {
  field(DESC, "ads:PRG_IM2K0_XTES.f....fbStates.enumSet")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.enumSet=")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM2K0:XTES:MMS:STATE:GET_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f....fbStates.enumGet")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.enumGet?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(ZRST, "Unknown")
  field(ONST, "Out")
  field(TWST, "Yag")
  field(THST, "Diamond")
  field(FRST, "Reticle")
}

record(waveform, "IM2K0:XTES:MMS:STATE:01:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:02:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:03:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:04:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:05:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:06:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:07:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:08:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:09:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:10:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:11:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:12:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:13:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:14:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MMS:STATE:15:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "IM2K0:XTES:MMS:STATE:01:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:01:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:02:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:02:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:03:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:03:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:04:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:04:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:05:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:05:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:06:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:06:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:07:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:07:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:08:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:08:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:09:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:09:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:10:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:10:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:11:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:11:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:12:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:12:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:13:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:13:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:14:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:14:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:15:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:15:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:01:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:01:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:02:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:02:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:03:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:03:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:04:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:04:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:05:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:05:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:06:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:06:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:07:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:07:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:08:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:08:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:09:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:09:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:10:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:10:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:11:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:11:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:12:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:12:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:13:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:13:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:14:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:14:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:15:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:15:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:01:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:01:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:02:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:02:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:03:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:03:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:04:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:04:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:05:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:05:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:06:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:06:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:07:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:07:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:08:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:08:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:09:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:09:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:10:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:10:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:11:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:11:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:12:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:12:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:13:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:13:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:14:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:14:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:15:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:15:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:01:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:01:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:02:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:02:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:03:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:03:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:04:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:04:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:05:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:05:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:06:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:06:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:07:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:07:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:08:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:08:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:09:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:09:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:10:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:10:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:11:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:11:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:12:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:12:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:13:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:13:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:14:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:14:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:15:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:15:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:01:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:01:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:02:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:02:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:03:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:03:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:04:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:04:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:05:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:05:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:06:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:06:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:07:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:07:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:08:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:08:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:09:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:09:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:10:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:10:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:11:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:11:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:12:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:12:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:13:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:13:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:14:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:14:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:STATE:15:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:STATE:15:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "IM2K0:XTES:MMS:STATE:01:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:02:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:03:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:04:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:05:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:06:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:07:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:08:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:09:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:10:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:11:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:12:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:13:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:14:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:15:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:01:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:02:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:03:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:04:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:05:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:06:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:07:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:08:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:09:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:10:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:11:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:12:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:13:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:14:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:15:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:01:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[1].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:02:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[2].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:03:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[3].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:04:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[4].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:05:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[5].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:06:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[6].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:07:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[7].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:08:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[8].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:09:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[9].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:10:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[10].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:11:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[11].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:12:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[12].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:13:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[13].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:14:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[14].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:15:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.arrStates[15].bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:STATE:RESET_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...ateManager.bReset")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.bReset?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "IM2K0:XTES:MMS:STATE:RESET") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...ateManager.bReset")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.bReset=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:MMS:STATE:ERR_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...ateManager.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(longin, "IM2K0:XTES:MMS:STATE:ERRID_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...eManager.nErrorId")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.nErrorId?")
}

record(waveform, "IM2K0:XTES:MMS:STATE:ERRMSG_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...ger.sErrorMessage")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM2K0:XTES:MMS:STATE:BUSY_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...tateManager.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "IM2K0:XTES:MMS:STATE:DONE_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...tateManager.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbStates.fbStateManager.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "IM2K0:XTES:MFW:ERR:RESET_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...Wheel.bResetError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.bResetError?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM2K0:XTES:MFW:ERR:RESET") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...Wheel.bResetError")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.bResetError=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM2K0:XTES:MFW:SET_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...lterWheel.nSetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.nSetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
}

record(mbbo, "IM2K0:XTES:MFW:SET") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...lterWheel.nSetPos")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.nSetPos=")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "IM2K0:XTES:MFW:GET_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...lterWheel.nGetPos")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.nGetPos?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Unknown")
  field(ONST, "T50")
  field(TWST, "T25")
  field(THST, "T10")
  field(FRST, "T5")
  field(FVST, "T1")
  field(SXST, "T100")
}

record(waveform, "IM2K0:XTES:MFW:ERR:MSG_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...rWheel.sLastError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.sLastError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MFW:RAW:CMD_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...rWheel.fbCom.sCmd")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.sCmd?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "IM2K0:XTES:MFW:RAW:CMD") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...rWheel.fbCom.sCmd")
  field(DTYP, "asynInt8ArrayOut")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.sCmd=")
  field(FTVL, "CHAR")
  field(NELM, "80")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:MFW:RAW:SEND_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...Wheel.fbCom.bSend")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.bSend?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM2K0:XTES:MFW:RAW:SEND") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...Wheel.fbCom.bSend")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.bSend=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "IM2K0:XTES:MFW:RAW:RESP_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...l.fbCom.sResponse")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.sResponse?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM2K0:XTES:MFW:RAW:DONE_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...Wheel.fbCom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.bDone?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(mbbi, "IM2K0:XTES:MFW:RAW:ERR:SER_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...SerialLineErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.eSerialLineErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
}

record(mbbi, "IM2K0:XTES:MFW:RAW:ERR:SEND_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...bCom.eSendErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.eSendErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
}

record(mbbi, "IM2K0:XTES:MFW:RAW:ERR:RECV_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...bCom.eRecvErrorID")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFilterWheel.fbCom.eRecvErrorID?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "10")
  field(FRVL, "11")
  field(FVVL, "20")
  field(SXVL, "21")
  field(SVVL, "22")
  field(EIVL, "23")
  field(NIVL, "24")
  field(TEVL, "257")
  field(ELVL, "258")
  field(TVVL, "4097")
  field(TTVL, "4098")
  field(FTVL, "4099")
  field(FFVL, "4100")
  field(ZRST, "COMERROR_NOERROR")
  field(ONST, "COMERROR_PARAMETERCHANGED")
  field(TWST, "COMERROR_TXBUFFOVERRUN")
  field(THST, "COMERROR_STRINGOVERRUN")
  field(FRST, "COMERROR_ZEROCHARINVALID")
  field(FVST, "COMERROR_INVALIDPOINTER")
  field(SXST, "COMERROR_INVALIDRXPOINTER")
  field(SVST, "COMERROR_INVALIDRXLENGTH")
  field(EIST, "COMERROR_DATASIZEOVERRUN")
  field(NIST, "COMERROR_INVALIDPROCESSDATASIZE")
  field(TEST, "COMERROR_MODENOTSUPPORTED")
  field(ELST, "COMERROR_INVALIDCHANNELNUMBER")
  field(TVST, "COMERROR_INVALIDBAUDRATE")
  field(TTST, "COMERROR_INVALIDNUMDATABITS")
  field(FTST, "COMERROR_INVALIDNUMSTOPBITS")
  field(FFST, "COMERROR_INVALIDPARITY")
}

record(bi, "IM2K0:XTES:CAM:PWR_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...fbOpal.bOpalPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbOpal.bOpalPower?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM2K0:XTES:CAM:PWR") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...fbOpal.bOpalPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbOpal.bOpalPower=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:CAM:CIL:PWR_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f....fbOpal.bLedPower")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbOpal.bLedPower?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM2K0:XTES:CAM:CIL:PWR") {
  field(DESC, "ads:PRG_IM2K0_XTES.f....fbOpal.bLedPower")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbOpal.bLedPower=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:SFW:FLOW_RBV") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_IM2K0_XTES.fbIM2K0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "IM2K0:XTES:SFW:FLOW") {
  field(DESC, "ads:PRG_IM2K0_XTES.f...lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_IM2K0_XTES.fbIM2K0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:GO_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.bExecuteMotion")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.bExecuteMotion?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL1K0:POWER:GO") {
  field(DESC, "ads:PRG_SL1K0_POWER.bExecuteMotion")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.bExecuteMotion=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:GO_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.bExecuteMotion")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.bExecuteMotion?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL2K0:POWER:GO") {
  field(DESC, "ads:PRG_SL2K0_POWER.bExecuteMotion")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.bExecuteMotion=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:MMS:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "IM1K0:XTES:MMS:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "IM1K0:XTES:MMS:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "IM1K0:XTES:MMS:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "IM1K0:XTES:MMS:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:MMS:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:MMS:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:MMS:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:MMS:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:MMS:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM1K0:XTES:MMS:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nCommand?")
}

record(longout, "IM1K0:XTES:MMS:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM1K0:XTES:MMS:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nCmdData?")
}

record(longout, "IM1K0:XTES:MMS:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "IM1K0:XTES:MMS:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:MMS:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:MMS:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M1.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "IM1K0:XTES:MMS:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nMotionAxisID?")
}

record(bi, "IM1K0:XTES:MMS:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:MMS:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "IM1K0:XTES:MMS:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.nErrorId?")
}

record(waveform, "IM1K0:XTES:MMS:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M1.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "IM1K0:XTES:CLZ:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "IM1K0:XTES:CLZ:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "IM1K0:XTES:CLZ:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:CLZ:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:CLZ:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:CLZ:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM1K0:XTES:CLZ:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nCommand?")
}

record(longout, "IM1K0:XTES:CLZ:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM1K0:XTES:CLZ:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nCmdData?")
}

record(longout, "IM1K0:XTES:CLZ:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "IM1K0:XTES:CLZ:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLZ:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:CLZ:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLZ:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:CLZ:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLZ:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:CLZ:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLZ:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:CLZ:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLZ:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M2.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "IM1K0:XTES:CLZ:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nMotionAxisID?")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:CLZ:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "IM1K0:XTES:CLZ:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.nErrorId?")
}

record(waveform, "IM1K0:XTES:CLZ:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M2.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM1K0:XTES:CLF:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "IM1K0:XTES:CLF:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "IM1K0:XTES:CLF:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "IM1K0:XTES:CLF:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "IM1K0:XTES:CLF:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:CLF:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:CLF:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:CLF:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K0:XTES:CLF:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K0:XTES:CLF:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM1K0:XTES:CLF:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nCommand?")
}

record(longout, "IM1K0:XTES:CLF:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM1K0:XTES:CLF:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nCmdData?")
}

record(longout, "IM1K0:XTES:CLF:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "IM1K0:XTES:CLF:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLF:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:CLF:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLF:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:CLF:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLF:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:CLF:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLF:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K0:XTES:CLF:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K0:XTES:CLF:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M3.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "IM1K0:XTES:CLF:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nMotionAxisID?")
}

record(bi, "IM1K0:XTES:CLF:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K0:XTES:CLF:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "IM1K0:XTES:CLF:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.nErrorId?")
}

record(waveform, "IM1K0:XTES:CLF:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M3.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM1K3:PPM:MMS:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "IM1K3:PPM:MMS:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "IM1K3:PPM:MMS:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "IM1K3:PPM:MMS:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "IM1K3:PPM:MMS:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K3:PPM:MMS:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K3:PPM:MMS:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K3:PPM:MMS:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM1K3:PPM:MMS:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM1K3:PPM:MMS:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM1K3:PPM:MMS:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nCommand?")
}

record(longout, "IM1K3:PPM:MMS:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM1K3:PPM:MMS:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nCmdData?")
}

record(longout, "IM1K3:PPM:MMS:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "IM1K3:PPM:MMS:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM1K3:PPM:MMS:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM1K3:PPM:MMS:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M4.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "IM1K3:PPM:MMS:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nMotionAxisID?")
}

record(bi, "IM1K3:PPM:MMS:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM1K3:PPM:MMS:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "IM1K3:PPM:MMS:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.nErrorId?")
}

record(waveform, "IM1K3:PPM:MMS:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M4.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM2K0:XTES:MMS:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "IM2K0:XTES:MMS:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "IM2K0:XTES:MMS:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "IM2K0:XTES:MMS:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "IM2K0:XTES:MMS:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:MMS:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:MMS:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:MMS:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:MMS:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:MMS:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM2K0:XTES:MMS:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nCommand?")
}

record(longout, "IM2K0:XTES:MMS:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM2K0:XTES:MMS:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nCmdData?")
}

record(longout, "IM2K0:XTES:MMS:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "IM2K0:XTES:MMS:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:MMS:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:MMS:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M5.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "IM2K0:XTES:MMS:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nMotionAxisID?")
}

record(bi, "IM2K0:XTES:MMS:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:MMS:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "IM2K0:XTES:MMS:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.nErrorId?")
}

record(waveform, "IM2K0:XTES:MMS:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M5.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "IM2K0:XTES:CLZ:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "IM2K0:XTES:CLZ:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "IM2K0:XTES:CLZ:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:CLZ:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:CLZ:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:CLZ:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM2K0:XTES:CLZ:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nCommand?")
}

record(longout, "IM2K0:XTES:CLZ:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM2K0:XTES:CLZ:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nCmdData?")
}

record(longout, "IM2K0:XTES:CLZ:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "IM2K0:XTES:CLZ:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLZ:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:CLZ:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLZ:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:CLZ:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLZ:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:CLZ:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLZ:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:CLZ:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLZ:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M6.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "IM2K0:XTES:CLZ:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nMotionAxisID?")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:CLZ:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "IM2K0:XTES:CLZ:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.nErrorId?")
}

record(waveform, "IM2K0:XTES:CLZ:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M6.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "IM2K0:XTES:CLF:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "IM2K0:XTES:CLF:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "IM2K0:XTES:CLF:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "IM2K0:XTES:CLF:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "IM2K0:XTES:CLF:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:CLF:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:CLF:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:CLF:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "IM2K0:XTES:CLF:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "IM2K0:XTES:CLF:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM2K0:XTES:CLF:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nCommand?")
}

record(longout, "IM2K0:XTES:CLF:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "IM2K0:XTES:CLF:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nCmdData?")
}

record(longout, "IM2K0:XTES:CLF:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "IM2K0:XTES:CLF:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLF:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:CLF:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLF:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:CLF:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLF:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:CLF:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLF:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "IM2K0:XTES:CLF:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "IM2K0:XTES:CLF:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M7.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "IM2K0:XTES:CLF:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nMotionAxisID?")
}

record(bi, "IM2K0:XTES:CLF:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "IM2K0:XTES:CLF:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "IM2K0:XTES:CLF:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.nErrorId?")
}

record(waveform, "IM2K0:XTES:CLF:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M7.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "SL1K0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "SL1K0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "SL1K0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:SOUTH:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:SOUTH:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:SOUTH:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL1K0:POWER:MMS:SOUTH:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nCommand?")
}

record(longout, "SL1K0:POWER:MMS:SOUTH:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL1K0:POWER:MMS:SOUTH:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nCmdData?")
}

record(longout, "SL1K0:POWER:MMS:SOUTH:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL1K0:POWER:MMS:SOUTH:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:SOUTH:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:SOUTH:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:SOUTH:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:SOUTH:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:SOUTH:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:SOUTH:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M18.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "SL1K0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nMotionAxisID?")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:SOUTH:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "SL1K0:POWER:MMS:SOUTH:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.nErrorId?")
}

record(waveform, "SL1K0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M18.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "SL1K0:POWER:MMS:TOP:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "SL1K0:POWER:MMS:TOP:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "SL1K0:POWER:MMS:TOP:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:TOP:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:TOP:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:TOP:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL1K0:POWER:MMS:TOP:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nCommand?")
}

record(longout, "SL1K0:POWER:MMS:TOP:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL1K0:POWER:MMS:TOP:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nCmdData?")
}

record(longout, "SL1K0:POWER:MMS:TOP:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL1K0:POWER:MMS:TOP:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:TOP:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:TOP:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:TOP:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:TOP:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:TOP:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:TOP:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:TOP:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:TOP:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:TOP:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M19.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "SL1K0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nMotionAxisID?")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:TOP:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "SL1K0:POWER:MMS:TOP:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.nErrorId?")
}

record(waveform, "SL1K0:POWER:MMS:TOP:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M19.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "SL1K0:POWER:MMS:NORTH:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "SL1K0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "SL1K0:POWER:MMS:NORTH:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:NORTH:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:NORTH:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:NORTH:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL1K0:POWER:MMS:NORTH:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nCommand?")
}

record(longout, "SL1K0:POWER:MMS:NORTH:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL1K0:POWER:MMS:NORTH:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nCmdData?")
}

record(longout, "SL1K0:POWER:MMS:NORTH:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL1K0:POWER:MMS:NORTH:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:NORTH:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:NORTH:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:NORTH:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:NORTH:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:NORTH:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:NORTH:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:NORTH:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:NORTH:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:NORTH:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M20.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "SL1K0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nMotionAxisID?")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:NORTH:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "SL1K0:POWER:MMS:NORTH:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.nErrorId?")
}

record(waveform, "SL1K0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M20.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "SL1K0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "SL1K0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "SL1K0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:BOTTOM:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:BOTTOM:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL1K0:POWER:MMS:BOTTOM:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL1K0:POWER:MMS:BOTTOM:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nCommand?")
}

record(longout, "SL1K0:POWER:MMS:BOTTOM:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL1K0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nCmdData?")
}

record(longout, "SL1K0:POWER:MMS:BOTTOM:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL1K0:POWER:MMS:BOTTOM:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:BOTTOM:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:BOTTOM:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:BOTTOM:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:BOTTOM:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:MMS:BOTTOM:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M21.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "SL1K0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nMotionAxisID?")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL1K0:POWER:MMS:BOTTOM:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "SL1K0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.nErrorId?")
}

record(waveform, "SL1K0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M21.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "SL2K0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "SL2K0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "SL2K0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:SOUTH:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:SOUTH:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:SOUTH:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL2K0:POWER:MMS:SOUTH:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nCommand?")
}

record(longout, "SL2K0:POWER:MMS:SOUTH:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL2K0:POWER:MMS:SOUTH:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nCmdData?")
}

record(longout, "SL2K0:POWER:MMS:SOUTH:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL2K0:POWER:MMS:SOUTH:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:SOUTH:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:SOUTH:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:SOUTH:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:SOUTH:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:SOUTH:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:SOUTH:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M22.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "SL2K0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nMotionAxisID?")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:SOUTH:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "SL2K0:POWER:MMS:SOUTH:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.nErrorId?")
}

record(waveform, "SL2K0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M22.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "SL2K0:POWER:MMS:TOP:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "SL2K0:POWER:MMS:TOP:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "SL2K0:POWER:MMS:TOP:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:TOP:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:TOP:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:TOP:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL2K0:POWER:MMS:TOP:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nCommand?")
}

record(longout, "SL2K0:POWER:MMS:TOP:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL2K0:POWER:MMS:TOP:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nCmdData?")
}

record(longout, "SL2K0:POWER:MMS:TOP:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL2K0:POWER:MMS:TOP:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:TOP:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:TOP:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:TOP:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:TOP:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:TOP:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:TOP:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:TOP:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:TOP:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:TOP:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M23.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "SL2K0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nMotionAxisID?")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:TOP:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "SL2K0:POWER:MMS:TOP:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.nErrorId?")
}

record(waveform, "SL2K0:POWER:MMS:TOP:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M23.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "SL2K0:POWER:MMS:NORTH:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "SL2K0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "SL2K0:POWER:MMS:NORTH:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:NORTH:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:NORTH:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:NORTH:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL2K0:POWER:MMS:NORTH:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nCommand?")
}

record(longout, "SL2K0:POWER:MMS:NORTH:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL2K0:POWER:MMS:NORTH:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nCmdData?")
}

record(longout, "SL2K0:POWER:MMS:NORTH:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL2K0:POWER:MMS:NORTH:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:NORTH:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:NORTH:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:NORTH:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:NORTH:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:NORTH:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:NORTH:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:NORTH:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:NORTH:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:NORTH:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M24.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "SL2K0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nMotionAxisID?")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:NORTH:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "SL2K0:POWER:MMS:NORTH:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.nErrorId?")
}

record(waveform, "SL2K0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M24.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV") {
  field(DESC, "FALSE if forward limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bLimitForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV") {
  field(DESC, "FALSE if reverse limit hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bLimitBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bHome_RBV") {
  field(DESC, "TRUE if at homing switch")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bHome?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV") {
  field(DESC, "TRUE if brake released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bBrakeRelease?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV") {
  field(DESC, "TRUE if STO not hit")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bHardwareEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bAllForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV") {
  field(DESC, "Summary of axis permission to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bAllBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV") {
  field(DESC, "Summary of axis permission to have power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bAllEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move forward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bGantryForwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV") {
  field(DESC, "TRUE if gantry ok to move backward")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bGantryBackwardEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV") {
  field(DESC, "FALSE if axis is in PMPS")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bPowerSelf?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(mbbi, "SL2K0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV") {
  field(DESC, "Describes when the axis will automatically get power")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nEnableMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "ALWAYS")
  field(ONST, "NEVER")
  field(TWST, "DURING_MOTION")
}

record(mbbi, "SL2K0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV") {
  field(DESC, "Describes when the brake will be released")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nBrakeMode?")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "IF_ENABLED")
  field(ONST, "IF_MOVING")
  field(TWST, "NO_BRAKE")
}

record(mbbi, "SL2K0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV") {
  field(DESC, "Describes our homing strategy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nHomingMode?")
  field(ZRVL, "-1")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "15")
  field(ZRST, "NONE")
  field(ONST, "LOW_LIMIT")
  field(TWST, "HIGH_LIMIT")
  field(THST, "HOME_VIA_LOW")
  field(FRST, "HOME_VIA_HIGH")
  field(FVST, "ABSOLUTE_SET")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV") {
  field(DESC, "TRUE if gantry EPS active")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bGantryAxis?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bEnable_RBV") {
  field(DESC, "Used internally to request enables")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bEnable?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:BOTTOM:PLC:bEnable") {
  field(DESC, "Used internally to request enables")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.bEnable=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bReset_RBV") {
  field(DESC, "Used internally to reset errors")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bReset?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:BOTTOM:PLC:bReset") {
  field(DESC, "Used internally to reset errors")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.bReset=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bExecute_RBV") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bExecute?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bo, "SL2K0:POWER:MMS:BOTTOM:PLC:bExecute") {
  field(DESC, "Used internally and by the IOC to start or stop")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.bExecute=")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL2K0:POWER:MMS:BOTTOM:PLC:nCommand_RBV") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nCommand?")
}

record(longout, "SL2K0:POWER:MMS:BOTTOM:PLC:nCommand") {
  field(DESC, "Used internally and by the IOC to pick move type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.nCommand=")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "SL2K0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nCmdData?")
}

record(longout, "SL2K0:POWER:MMS:BOTTOM:PLC:nCmdData") {
  field(DESC, "Used internally and by the IOC to pass extra args")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.nCmdData=")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL2K0:POWER:MMS:BOTTOM:PLC:fPosition_RBV") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:BOTTOM:PLC:fPosition") {
  field(DESC, "Used internally and by the IOC as the set position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:BOTTOM:PLC:fVelocity") {
  field(DESC, "Used internally and by the IOC to set velocity")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fAcceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:BOTTOM:PLC:fAcceleration") {
  field(DESC, "Used internally and by the IOC to set acceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fAcceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fDeceleration?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:BOTTOM:PLC:fDeceleration") {
  field(DESC, "Used internally and by the IOC to set deceleration")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fDeceleration=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.fHomePosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:MMS:BOTTOM:PLC:fHomePosition") {
  field(DESC, "Used internally and by the IOC to pick home position")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/Main.M25.fHomePosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(longin, "SL2K0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV") {
  field(DESC, "Unique ID assigned to each axis in the NC")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nMotionAxisID?")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV") {
  field(DESC, "TRUE if done enabling")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bEnableDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bBusy_RBV") {
  field(DESC, "TRUE if in the middle of a command")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bBusy?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bDone_RBV") {
  field(DESC, "TRUE if command finished successfully")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bDone?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(bi, "SL2K0:POWER:MMS:BOTTOM:PLC:bError_RBV") {
  field(DESC, "TRUE if we")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.bError?")
  field(ZNAM, "TRUE")
  field(ONAM, "FALSE")
}

record(longin, "SL2K0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV") {
  field(DESC, "Error code if nonzero")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.nErrorId?")
}

record(waveform, "SL2K0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV") {
  field(DESC, "Message to identify the error state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/Main.M25.sErrorMessage?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(bi, "SL1K0:POWER:PMPS_OK_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.bMoveOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.bMoveOk?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL1K0:POWER:TOP:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL1K0:POWER:TOP:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:TOP:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:TOP:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:TOP:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:TOP:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:TOP:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:TOP:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:TOP:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:TOP:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:TOP:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL1K0:POWER:TOP:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:TOP:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:TOP:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:TOP:GO_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbTop.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL1K0:POWER:TOP:GO") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbTop.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbTop.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:TOP:AT_STATE_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbTop.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:TOP:DMOV_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.fbTop.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:TOP:BUSY_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.fbTop.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:TOP:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.fbTop.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL1K0:POWER:TOP:ERRMSG_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.fbTop.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbTop.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "SL1K0:POWER:BOTTOM:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL1K0:POWER:BOTTOM:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:BOTTOM:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:BOTTOM:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:BOTTOM:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:BOTTOM:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:BOTTOM:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:BOTTOM:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:BOTTOM:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:BOTTOM:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:BOTTOM:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL1K0:POWER:BOTTOM:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:BOTTOM:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:BOTTOM:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:BOTTOM:GO_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....fbBottom.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL1K0:POWER:BOTTOM:GO") {
  field(DESC, "ads:PRG_SL1K0_POWER....fbBottom.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbBottom.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:BOTTOM:AT_STATE_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....fbBottom.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:BOTTOM:DMOV_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbBottom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:BOTTOM:BUSY_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbBottom.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:BOTTOM:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....0.fbBottom.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL1K0:POWER:BOTTOM:ERRMSG_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....0.fbBottom.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbBottom.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "SL1K0:POWER:NORTH:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL1K0:POWER:NORTH:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:NORTH:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:NORTH:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:NORTH:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:NORTH:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:NORTH:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:NORTH:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:NORTH:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:NORTH:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:NORTH:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL1K0:POWER:NORTH:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:NORTH:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:NORTH:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:NORTH:GO_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.....fbNorth.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL1K0:POWER:NORTH:GO") {
  field(DESC, "ads:PRG_SL1K0_POWER.....fbNorth.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbNorth.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:NORTH:AT_STATE_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.....fbNorth.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:NORTH:DMOV_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....1K0.fbNorth.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:NORTH:BUSY_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....1K0.fbNorth.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:NORTH:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbNorth.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL1K0:POWER:NORTH:ERRMSG_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbNorth.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbNorth.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "SL1K0:POWER:SOUTH:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL1K0:POWER:SOUTH:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:SOUTH:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:SOUTH:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:SOUTH:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:SOUTH:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:SOUTH:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:SOUTH:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:SOUTH:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:SOUTH:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:SOUTH:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL1K0:POWER:SOUTH:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:SOUTH:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:SOUTH:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL1K0:POWER:SOUTH:GO_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.....fbSouth.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL1K0:POWER:SOUTH:GO") {
  field(DESC, "ads:PRG_SL1K0_POWER.....fbSouth.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbSouth.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:SOUTH:AT_STATE_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.....fbSouth.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:SOUTH:DMOV_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....1K0.fbSouth.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:SOUTH:BUSY_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....1K0.fbSouth.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL1K0:POWER:SOUTH:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbSouth.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL1K0:POWER:SOUTH:ERRMSG_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....K0.fbSouth.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbSouth.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL1K0:POWER:XWID_REQ_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....rReqApertureSizeX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rReqApertureSizeX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:XWID_REQ") {
  field(DESC, "ads:PRG_SL1K0_POWER....rReqApertureSizeX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rReqApertureSizeX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:YWID_REQ_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....rReqApertureSizeY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rReqApertureSizeY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:YWID_REQ") {
  field(DESC, "ads:PRG_SL1K0_POWER....rReqApertureSizeY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rReqApertureSizeY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:XCEN_REQ_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rReqCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rReqCenterX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:XCEN_REQ") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rReqCenterX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rReqCenterX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:YCEN_REQ_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rReqCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rReqCenterY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:YCEN_REQ") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rReqCenterY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rReqCenterY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:ACTUAL_XWIDTH_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....rActApertureSizeX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rActApertureSizeX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:ACTUAL_XWIDTH") {
  field(DESC, "ads:PRG_SL1K0_POWER....rActApertureSizeX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rActApertureSizeX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:ACTUAL_YWIDTH_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....rActApertureSizeY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rActApertureSizeY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:ACTUAL_YWIDTH") {
  field(DESC, "ads:PRG_SL1K0_POWER....rActApertureSizeY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rActApertureSizeY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:ACTUAL_XCENTER_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rActCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rActCenterX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:ACTUAL_XCENTER") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rActCenterX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rActCenterX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL1K0:POWER:ACTUAL_YCENTER_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rActCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rActCenterY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL1K0:POWER:ACTUAL_YCENTER") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rActCenterY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rActCenterY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL1K0:POWER:XCEN_SETZERO_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rSetCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rSetCenterX?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "SL1K0:POWER:XCEN_SETZERO") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rSetCenterX")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rSetCenterX=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:YCEN_SETZERO_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rSetCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.rSetCenterY?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "SL1K0:POWER:YCEN_SETZERO") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.rSetCenterY")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.rSetCenterY=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:OPEN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.bOpen")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.bOpen?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL1K0:POWER:OPEN") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.bOpen")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.bOpen=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:CLOSE_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.bClose")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.bClose?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL1K0:POWER:CLOSE") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.bClose")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.bClose=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:BLOCK_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.bBlock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.bBlock?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL1K0:POWER:BLOCK") {
  field(DESC, "ads:PRG_SL1K0_POWER.fbSL1K0.bBlock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.bBlock=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL1K0:POWER:FSW:FLOW_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "SL1K0:POWER:FSW:FLOW") {
  field(DESC, "ads:PRG_SL1K0_POWER....lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL1K0_POWER.fbSL1K0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL1K0:POWER:TOP:RTD:01:TEMP_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....0.RTD_TOP_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_TOP_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL1K0:POWER:TOP:RTD:01:CONN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER...._TOP_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_TOP_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL1K0:POWER:TOP:RTD:01:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.....RTD_TOP_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_TOP_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL1K0:POWER:TOP:RTD:02:TEMP_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....0.RTD_TOP_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_TOP_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL1K0:POWER:TOP:RTD:02:CONN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER...._TOP_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_TOP_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL1K0:POWER:TOP:RTD:02:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER.....RTD_TOP_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_TOP_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL1K0:POWER:BOTTOM:RTD:01:TEMP_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....TD_Bottom_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_Bottom_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL1K0:POWER:BOTTOM:RTD:01:CONN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....ttom_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_Bottom_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL1K0:POWER:BOTTOM:RTD:01:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....D_Bottom_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_Bottom_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL1K0:POWER:BOTTOM:RTD:02:TEMP_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....TD_Bottom_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_Bottom_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL1K0:POWER:BOTTOM:RTD:02:CONN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....ttom_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_Bottom_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL1K0:POWER:BOTTOM:RTD:02:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....D_Bottom_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_Bottom_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL1K0:POWER:NORTH:RTD:01:TEMP_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....RTD_North_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_North_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL1K0:POWER:NORTH:RTD:01:CONN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....orth_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_North_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL1K0:POWER:NORTH:RTD:01:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....TD_North_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_North_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL1K0:POWER:NORTH:RTD:02:TEMP_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....RTD_North_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_North_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL1K0:POWER:NORTH:RTD:02:CONN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....orth_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_North_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL1K0:POWER:NORTH:RTD:02:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....TD_North_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_North_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL1K0:POWER:SOUTH:RTD:01:TEMP_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....RTD_South_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_South_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL1K0:POWER:SOUTH:RTD:01:CONN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....outh_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_South_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL1K0:POWER:SOUTH:RTD:01:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....TD_South_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_South_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL1K0:POWER:SOUTH:RTD:02:TEMP_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....RTD_South_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_South_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL1K0:POWER:SOUTH:RTD:02:CONN_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....outh_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_South_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL1K0:POWER:SOUTH:RTD:02:ERR_RBV") {
  field(DESC, "ads:PRG_SL1K0_POWER....TD_South_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL1K0_POWER.fbSL1K0.RTD_South_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:PMPS_OK_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.bMoveOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.bMoveOk?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL2K0:POWER:TOP:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL2K0:POWER:TOP:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:TOP:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:TOP:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:TOP:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:TOP:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:TOP:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:TOP:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:TOP:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:TOP:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:TOP:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL2K0:POWER:TOP:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:TOP:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:TOP:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:TOP:GO_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbTop.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL2K0:POWER:TOP:GO") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbTop.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbTop.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:TOP:AT_STATE_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbTop.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:TOP:DMOV_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.fbTop.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:TOP:BUSY_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.fbTop.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:TOP:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.fbTop.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL2K0:POWER:TOP:ERRMSG_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.fbTop.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbTop.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "SL2K0:POWER:BOTTOM:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL2K0:POWER:BOTTOM:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:BOTTOM:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:BOTTOM:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:BOTTOM:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:BOTTOM:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:BOTTOM:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:BOTTOM:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:BOTTOM:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:BOTTOM:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:BOTTOM:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL2K0:POWER:BOTTOM:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:BOTTOM:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:BOTTOM:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:BOTTOM:GO_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....fbBottom.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL2K0:POWER:BOTTOM:GO") {
  field(DESC, "ads:PRG_SL2K0_POWER....fbBottom.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbBottom.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:BOTTOM:AT_STATE_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....fbBottom.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:BOTTOM:DMOV_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbBottom.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:BOTTOM:BUSY_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbBottom.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:BOTTOM:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....0.fbBottom.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL2K0:POWER:BOTTOM:ERRMSG_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....0.fbBottom.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbBottom.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "SL2K0:POWER:NORTH:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL2K0:POWER:NORTH:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:NORTH:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:NORTH:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:NORTH:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:NORTH:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:NORTH:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:NORTH:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:NORTH:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:NORTH:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:NORTH:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL2K0:POWER:NORTH:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:NORTH:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:NORTH:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:NORTH:GO_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.....fbNorth.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL2K0:POWER:NORTH:GO") {
  field(DESC, "ads:PRG_SL2K0_POWER.....fbNorth.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbNorth.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:NORTH:AT_STATE_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.....fbNorth.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:NORTH:DMOV_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....2K0.fbNorth.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:NORTH:BUSY_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....2K0.fbNorth.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:NORTH:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbNorth.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL2K0:POWER:NORTH:ERRMSG_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbNorth.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbNorth.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(waveform, "SL2K0:POWER:SOUTH:NAME_RBV") {
  field(DESC, "Name of this position state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.sName?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL2K0:POWER:SOUTH:SETPOINT_RBV") {
  field(DESC, "Axis position associated with this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fPosition?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:SOUTH:SETPOINT") {
  field(DESC, "Axis position associated with this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fPosition=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:SOUTH:DELTA_RBV") {
  field(DESC, "Max deviation from position at this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fDelta?")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:SOUTH:DELTA") {
  field(DESC, "Max deviation from position at this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fDelta=")
  field(PREC, "3")
  field(DRVL, "0.0")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:SOUTH:VELO_RBV") {
  field(DESC, "Speed at which to move to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fVelocity?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:SOUTH:VELO") {
  field(DESC, "Speed at which to move to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fVelocity=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:SOUTH:ACCL_RBV") {
  field(DESC, "Acceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fAccel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:SOUTH:ACCL") {
  field(DESC, "Acceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fAccel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:SOUTH:DCCL_RBV") {
  field(DESC, "Deceleration to use for moves to this state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fDecel?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:SOUTH:DCCL") {
  field(DESC, "Deceleration to use for moves to this state")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.fDecel=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL2K0:POWER:SOUTH:MOVE_OK_RBV") {
  field(DESC, "TRUE if the move would be safe")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.bMoveOk?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:SOUTH:LOCKED_RBV") {
  field(DESC, "TRUE if state is immutable")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.bLocked?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:SOUTH:VALID_RBV") {
  field(DESC, "TRUE if this is a real state")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.stPositionState.bValid?")
  field(ZNAM, "FALSE")
  field(ONAM, "TRUE")
}

record(bi, "SL2K0:POWER:SOUTH:GO_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.....fbSouth.bExecute")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.bExecute?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL2K0:POWER:SOUTH:GO") {
  field(DESC, "ads:PRG_SL2K0_POWER.....fbSouth.bExecute")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbSouth.bExecute=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:SOUTH:AT_STATE_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.....fbSouth.bAtState")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.bAtState?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:SOUTH:DMOV_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....2K0.fbSouth.bDone")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.bDone?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:SOUTH:BUSY_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....2K0.fbSouth.bBusy")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.bBusy?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bi, "SL2K0:POWER:SOUTH:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbSouth.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(waveform, "SL2K0:POWER:SOUTH:ERRMSG_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....K0.fbSouth.sError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbSouth.sError?")
  field(FTVL, "CHAR")
  field(NELM, "80")
}

record(ai, "SL2K0:POWER:XWID_REQ_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....rReqApertureSizeX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rReqApertureSizeX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:XWID_REQ") {
  field(DESC, "ads:PRG_SL2K0_POWER....rReqApertureSizeX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rReqApertureSizeX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:YWID_REQ_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....rReqApertureSizeY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rReqApertureSizeY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:YWID_REQ") {
  field(DESC, "ads:PRG_SL2K0_POWER....rReqApertureSizeY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rReqApertureSizeY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:XCEN_REQ_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rReqCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rReqCenterX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:XCEN_REQ") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rReqCenterX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rReqCenterX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:YCEN_REQ_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rReqCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rReqCenterY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:YCEN_REQ") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rReqCenterY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rReqCenterY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:ACTUAL_XWIDTH_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....rActApertureSizeX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rActApertureSizeX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:ACTUAL_XWIDTH") {
  field(DESC, "ads:PRG_SL2K0_POWER....rActApertureSizeX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rActApertureSizeX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:ACTUAL_YWIDTH_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....rActApertureSizeY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rActApertureSizeY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:ACTUAL_YWIDTH") {
  field(DESC, "ads:PRG_SL2K0_POWER....rActApertureSizeY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rActApertureSizeY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:ACTUAL_XCENTER_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rActCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rActCenterX?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:ACTUAL_XCENTER") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rActCenterX")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rActCenterX=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(ai, "SL2K0:POWER:ACTUAL_YCENTER_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rActCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rActCenterY?")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC")
}

record(ao, "SL2K0:POWER:ACTUAL_YCENTER") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rActCenterY")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rActCenterY=")
  field(PREC, "3")
  info(autosaveFields_pass0, "PREC VAL")
}

record(bi, "SL2K0:POWER:XCEN_SETZERO_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rSetCenterX")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rSetCenterX?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "SL2K0:POWER:XCEN_SETZERO") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rSetCenterX")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rSetCenterX=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:YCEN_SETZERO_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rSetCenterY")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.rSetCenterY?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "SL2K0:POWER:YCEN_SETZERO") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.rSetCenterY")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.rSetCenterY=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:OPEN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.bOpen")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.bOpen?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL2K0:POWER:OPEN") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.bOpen")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.bOpen=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:CLOSE_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.bClose")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.bClose?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL2K0:POWER:CLOSE") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.bClose")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.bClose=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:BLOCK_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.bBlock")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.bBlock?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(bo, "SL2K0:POWER:BLOCK") {
  field(DESC, "ads:PRG_SL2K0_POWER.fbSL2K0.bBlock")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.bBlock=")
  field(ZNAM, "False")
  field(ONAM, "True")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "SL2K0:POWER:FSW:FLOW_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....lowSwitch.bFlowOk")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.fbFlowSwitch.bFlowOk?")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bo, "SL2K0:POWER:FSW:FLOW") {
  field(DESC, "ads:PRG_SL2K0_POWER....lowSwitch.bFlowOk")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0,1)ADSPORT=851/PRG_SL2K0_POWER.fbSL2K0.fbFlowSwitch.bFlowOk=")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "SL2K0:POWER:TOP:RTD:01:TEMP_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....0.RTD_TOP_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_TOP_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL2K0:POWER:TOP:RTD:01:CONN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER...._TOP_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_TOP_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL2K0:POWER:TOP:RTD:01:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.....RTD_TOP_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_TOP_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL2K0:POWER:TOP:RTD:02:TEMP_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....0.RTD_TOP_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_TOP_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL2K0:POWER:TOP:RTD:02:CONN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER...._TOP_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_TOP_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL2K0:POWER:TOP:RTD:02:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER.....RTD_TOP_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_TOP_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL2K0:POWER:BOTTOM:RTD:01:TEMP_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....TD_Bottom_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_Bottom_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL2K0:POWER:BOTTOM:RTD:01:CONN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....ttom_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_Bottom_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL2K0:POWER:BOTTOM:RTD:01:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....D_Bottom_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_Bottom_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL2K0:POWER:BOTTOM:RTD:02:TEMP_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....TD_Bottom_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_Bottom_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL2K0:POWER:BOTTOM:RTD:02:CONN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....ttom_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_Bottom_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL2K0:POWER:BOTTOM:RTD:02:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....D_Bottom_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_Bottom_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL2K0:POWER:NORTH:RTD:01:TEMP_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....RTD_North_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_North_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL2K0:POWER:NORTH:RTD:01:CONN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....orth_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_North_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL2K0:POWER:NORTH:RTD:01:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....TD_North_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_North_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL2K0:POWER:NORTH:RTD:02:TEMP_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....RTD_North_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_North_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL2K0:POWER:NORTH:RTD:02:CONN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....orth_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_North_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL2K0:POWER:NORTH:RTD:02:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....TD_North_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_North_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL2K0:POWER:SOUTH:RTD:01:TEMP_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....RTD_South_1.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_South_1.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL2K0:POWER:SOUTH:RTD:01:CONN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....outh_1.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_South_1.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL2K0:POWER:SOUTH:RTD:01:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....TD_South_1.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_South_1.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}

record(ai, "SL2K0:POWER:SOUTH:RTD:02:TEMP_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....RTD_South_2.fTemp")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_South_2.fTemp?")
  field(PREC, "2")
  field(EGU, "C")
  info(autosaveFields_pass0, "PREC")
}

record(bi, "SL2K0:POWER:SOUTH:RTD:02:CONN_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....outh_2.bConnected")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_South_2.bConnected?")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
}

record(bi, "SL2K0:POWER:SOUTH:RTD:02:ERR_RBV") {
  field(DESC, "ads:PRG_SL2K0_POWER....TD_South_2.bError")
  field(SCAN, "I/O Intr")
  field(PINI, "1")
  field(TSE, "-2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)ADSPORT=851/POLL_RATE=1/PRG_SL2K0_POWER.fbSL2K0.RTD_South_2.bError?")
  field(ZNAM, "False")
  field(ONAM, "True")
}```
