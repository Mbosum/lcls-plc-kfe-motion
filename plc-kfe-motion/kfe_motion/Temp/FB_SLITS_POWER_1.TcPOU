<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_SLITS_POWER_1" Id="{f2a7b61c-c24f-40b8-8c2e-4d94fdfd3c86}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SLITS_POWER_1
VAR_IN_OUT
	stTopBlade: DUT_MotionStage;
	stBottomBlade: DUT_MotionStage;
	stNorthBlade: DUT_MotionStage;
	stSouthBlade: DUT_MotionStage;
END_VAR
VAR_INPUT
	{attribute 'pytmc' := '
    pv: GO;
	io: io;
    '}
	bExecuteMotion:bool ;
	{attribute 'pytmc' := '
    pv: PMPS_OK;
	io: i;
    '}
	bMoveOk:bool;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbTopBlade: FB_MotionStage;
	fbBottomBlade: FB_MotionStage;
	fbNorthBlade: FB_MotionStage;
	fbSouthBlade: FB_MotionStage;
	fPosTopBlade: LREAL;
	fPosBottomBlade: LREAL;
	fPosNorthBlade: LREAL;
	fPosSouthBlade: LREAL;
	{attribute 'pytmc' := '
		pv: FSW
	'}
	fbFlowSwitch: FB_XTES_Flowswitch;
	
	
	//RTDs
	{attribute 'pytmc' := '
		pv: TOP:RTD:01
	'}
	RTD_TOP_1: FB_TempSensor;
	{attribute 'pytmc' := '
		pv: TOP:RTD:02
	'}
	RTD_TOP_2: FB_TempSensor;
	{attribute 'pytmc' := '
		pv: BOTTOM:RTD:01
	'}
	RTD_Bottom_1: FB_TempSensor;
	{attribute 'pytmc' := '
		pv: BOTTOM:RTD:02
	'}
	RTD_Bottom_2: FB_TempSensor;
	
	{attribute 'pytmc' := '
		pv: NORTH:RTD:01
	'}
	RTD_North_1: FB_TempSensor;
	{attribute 'pytmc' := '
		pv: NORTH:RTD:02
	'}
	RTD_North_2: FB_TempSensor;
	{attribute 'pytmc' := '
		pv: SOUTH:RTD:01
	'}
	RTD_South_1: FB_TempSensor;
	{attribute 'pytmc' := '
		pv: SOUTH:RTD:02
	'}
	RTD_South_2: FB_TempSensor;
	
	
	(*Motion Parameters*)
	fSmallDelta: LREAL := 0.01;
	fBigDelta: LREAL := 10;
	fMaxVelocity: LREAL := 0.2;
	fHighAccel: LREAL := 0.8;
	fLowAccel: LREAL := 0.1;
	
	stTop: DUT_PositionState;
	stBOTTOM: DUT_PositionState;
	stNorth: DUT_PositionState;
	stSouth: DUT_PositionState;

	{attribute 'pytmc' := 'pv: TOP'}
	fbTop: FB_StatePTPMove;
	{attribute 'pytmc' := 'pv: BOTTOM'}
	fbBottom: FB_StatePTPMove;
	{attribute 'pytmc' := 'pv: NORTH'}
	fbNorth: FB_StatePTPMove;
	{attribute 'pytmc' := 'pv: SOUTH'}
	fbSouth: FB_StatePTPMove;
	
	(*EPICS pvs*)

	{attribute 'pytmc' := '
    pv: XWID_REQ;
	io: io;
    '}
	rReqApertureSizeX : REAL;
	{attribute 'pytmc' := '
    pv: YWID_REQ;
	io: io;
    '}
	rReqApertureSizeY : REAL;
	{attribute 'pytmc' := '
    pv: XCEN_REQ;
	io: io;
    '}
	rReqCenterX: REAL;
	{attribute 'pytmc' := '
    pv: YCEN_REQ;
	io: io;
    '}
	rReqCenterY: REAL;
	
	{attribute 'pytmc' := '
    pv: ACTUAL_XWIDTH;
	io: io;
    '}
	rActApertureSizeX : REAL;
	
	{attribute 'pytmc' := '
    pv: ACTUAL_YWIDTH;
	io: io;
    '}
	rActApertureSizeY : REAL;
	{attribute 'pytmc' := '
    pv: ACTUAL_XCENTER;
	io: io;
    '}
	rActCenterX: REAL;
	{attribute 'pytmc' := '
    pv: ACTUAL_YCENTER;
	io: io;
    '}
	rActCenterY: REAL;
	
	{attribute 'pytmc' := '
    pv: XCEN_SETZERO;
	io: io;
    '}
	rSetCenterX: REAL;
	{attribute 'pytmc' := '
    pv: YCEN_SETZERO;
	io: io;
    '}
	rSetCenterY: REAL;
	
	fbSetPosition: MC_SetPosition;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//  no STO
stTopBlade.bHardwareEnable := TRUE;
stBottomBlade.bHardwareEnable := TRUE;
stNorthBlade.bHardwareEnable := TRUE;
stSouthBlade.bHardwareEnable := TRUE;
stTopBlade.bPowerSelf :=TRUE;
stBottomBlade.bPowerSelf :=TRUE;
stNorthBlade.bPowerSelf :=TRUE;
stSouthBlade.bPowerSelf :=TRUE;
stTopBlade.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
stBottomBlade.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
stNorthBlade.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
stSouthBlade.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;

// Instantiate Function block for all the blades
fbTopBlade(stMotionStage:=stTopBlade);
fbBottomBlade(stMotionStage:=stBottomBlade);
fbNorthBlade(stMotionStage:=stNorthBlade);
fbSouthBlade(stMotionStage:=stSouthBlade);

//SET and GET the requested and Actual values
ACT_CalculatePositions();

// PTP Motion for each blade
stTop.sName := 'Top';
stTop.fPosition := fPosTopBlade;
stTop.fDelta := fSmallDelta;
stTop.fVelocity := fMaxVelocity;
stTop.fAccel := fHighAccel;
stTop.fDecel := fHighAccel;

stBOTTOM.sName := 'Bottom';
stBOTTOM.fPosition := fPosBottomBlade;
stBOTTOM.fDelta := fSmallDelta;
stBOTTOM.fVelocity := fMaxVelocity;
stBOTTOM.fAccel := fHighAccel;
stBOTTOM.fDecel := fHighAccel;

stNorth.sName := 'North';
stNorth.fPosition := fPosNorthBlade;
stNorth.fDelta := fSmallDelta;
stNorth.fVelocity := fMaxVelocity;
stNorth.fAccel := fHighAccel;
stNorth.fDecel := fHighAccel;

stSouth.sName := 'South';
stSouth.fPosition := fPosSouthBlade;
stSouth.fDelta := fSmallDelta;
stSouth.fVelocity := fMaxVelocity;
stSouth.fAccel := fHighAccel;
stSouth.fDecel := fHighAccel;

// fbTop.bExecute := fbBottom.bExecute :=fbNorth.bExecute := fbSouth.bExecute := bExecuteMotion;

fbTop(
	stPositionState:=stTop,
	bMoveOk:=TRUE,
	stMotionStage:=stTopBlade);
	
fbBottom(
	stPositionState:=stBOTTOM,
	bMoveOk:=bMoveOk,
	stMotionStage:=stBottomBlade);
	
fbNorth(
	stPositionState:=stNorth,
	bMoveOk:=bMoveOk,
	stMotionStage:=stNorthBlade);
	
fbSouth(
	stPositionState:=stSouth,
	bMoveOk:=bMoveOk,
	stMotionStage:=stSouthBlade);
	
	
////RTDs
RTD_TOP_1();
RTD_TOP_2();
RTD_Bottom_1();
RTD_Bottom_2();
RTD_North_1();
RTD_North_2();
RTD_South_1();
RTD_South_2();

//Flow Switch
fbFlowSwitch();]]></ST>
    </Implementation>
    <Action Name="ACT_CalculatePositions" Id="{725e398a-6162-44d6-8bb7-0ca8a4916528}">
      <Implementation>
        <ST><![CDATA[
//Calculate requested Positions

fPosTopBlade := (rReqApertureSizeY/2) + rReqCenterY;
fPosBottomBlade := (-1*rReqApertureSizeY/2) + rReqCenterY;

fPosNorthBlade := (rReqApertureSizeX/2) + rReqCenterX;
fPosSouthBlade := (-1*rReqApertureSizeX/2) + rReqCenterX;


//Calculate Actual Positions


rActApertureSizeX := ABS(stNorthBlade.stAxisStatus.fActPosition - stSouthBlade.stAxisStatus.fActPosition);


rActApertureSizeY := ABS(stTopBlade.stAxisStatus.fActPosition - stBottomBlade.stAxisStatus.fActPosition);


rActCenterX := ((stNorthBlade.stAxisStatus.fActPosition + stSouthBlade.stAxisStatus.fActPosition)/2);

rActCenterY := ((stTopBlade.stAxisStatus.fActPosition + stBottomBlade.stAxisStatus.fActPosition)/2);



//ZERO BIAS

]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>